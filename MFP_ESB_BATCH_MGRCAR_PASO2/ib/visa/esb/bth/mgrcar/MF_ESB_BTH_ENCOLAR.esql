BROKER SCHEMA ib.visa.esb.bth.mgrcar

PATH ib.visa.esb.bth;

CREATE COMPUTE MODULE MF_ESB_BTH_ENCOLAR_ObtenerCargos
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

			SET Environment.Variables.codigo = getMsgIdValor('MGRCAR2',TRUE);
			SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;			
			DECLARE intFila,cantidadGrupos,cantidadRegistros,cantidadRegistrosPorGrupo INT;		
						
			
			DECLARE refParam REFERENCE TO Environment.Variables.MQRFH2.usr.Parametros;
			SET Environment.Variables.isFinArchivo = CAST(InputBody.MENSAJE.FINCOLA AS BOOLEAN);			
			--SET Environment.Variables.cantidadMensaje = CAST(refParam.Servicio.CANPROC AS INTEGER);
			
			--INICIO DEL PROCESO DE OBTENER CARGOS PFRA MIGRAR
			 
			 
			
			CALL armarMensajeLogProceso(OutputRoot,
										CAST(refParam.Batch.idProceso AS CHARACTER), 
										CAST(refParam.Batch.Mgr.idTransaccion AS CHARACTER),     
										getTIP_LOG_INFO(),
										MessageFlowLabel,
										'Se inicia la migracion de cargos ');
										
			
			PROPAGATE TO TERMINAL 3;
			
															
			
			SET intFila = 0;
			SET cantidadGrupos = 0;
			SET cantidadRegistros = 0;
			SET cantidadRegistrosPorGrupo = 0;
			
		
			DECLARE outResultado INTEGER;
			DECLARE outResultadoMsj CHARACTER;
						
			--DECLARE refPagina REFERENCE TO InputBody.MENSAJE.REGISTROS.PAGINA;
			
			
			
			--WHILE LASTMOVE(refPagina) DO
			
				--CALL buscarCargosMigracion(Environment.ResultSet1[]);
									
				/*SET Environment.ResultSet1 = NULL;
													
				CALL buscarCargosMigracionTemporal(CAST(refPagina.regAntes AS INTEGER),CAST(refPagina.regDespues AS INTEGER),Environment.ResultSet1[]);			
					
				CREATE FIELD Environment.XMLNSC.Registros.REGISTRO;
			
				DECLARE refResult REFERENCE TO Environment.ResultSet1;
			
			
				WHILE LASTMOVE(refResult) DO
					SET cantidadRegistros = cantidadRegistros +1 ;
					SET cantidadRegistrosPorGrupo = cantidadRegistrosPorGrupo + 1;
					DECLARE refFila REFERENCE TO Environment.XMLNSC.Registros;
					MOVE refFila LASTCHILD;			
					SET intFila  = intFila +1;
					IF intFila = 200 THEN								
						SET intFila = 0;
						DELETE LASTCHILD OF Environment.XMLNSC.Registros;		
						SET OutputRoot.MQMD.CorrelId				= CAST(refParam.Batch.msgIdTransaccion AS BLOB);					
						SET OutputRoot.XMLNSC.MENSAJE.REGISTROS = Environment.XMLNSC.Registros;	
						SET OutputRoot.XMLNSC.MENSAJE.IDGRUPO = refParam.Batch.msgIdTransaccion;
						SET OutputRoot.XMLNSC.MENSAJE.IDTRANSACCION = refParam.Batch.msgIdTransaccion;
						SET OutputRoot.XMLNSC.MENSAJE.REGISTROSGRUPO = cantidadRegistrosPorGrupo;							
						
						SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = obtenerColaRecepArchivo('MGRCAR2');
						SET cantidadGrupos = cantidadGrupos+1;								
						PROPAGATE TO TERMINAL 1;							
						DELETE FIELD Environment.XMLNSC.Registros;	
						CREATE FIELD Environment.XMLNSC.Registros.REGISTRO;
						SET Environment.XMLNSC.Registros.REGISTRO = refResult;
						CREATE LASTCHILD OF Environment.XMLNSC.Registros NAME 'REGISTRO';			
						SET cantidadRegistrosPorGrupo = 0;															
					ELSE					
						SET refFila = refResult;								
						CREATE LASTCHILD OF Environment.XMLNSC.Registros NAME 'REGISTRO';					
						
					END IF;			
					
					MOVE refResult NEXTSIBLING REPEAT TYPE NAME;
					
				END WHILE;
					CREATE PROCEDURE insertarCargosMigracion(IN P_COD_USUARIO CHARACTER,
											IN P_FECHA_SISTEMA TIMESTAMP,
											IN P_IP_USUARIO CHARACTER,
											IN P_ID_PROCESO_MIGRACION INTEGER,
											IN P_POS_INI INTEGER,
											IN P_POS_FIN INTEGER,
											IN P_CANT_COMMIT INTEGER,
											OUT P_RESULTADO_MSJ CHARACTER,
									  		OUT P_RESULTADO INTEGER)
				*/

				--MIGRA TODOS LOS CARGOS DIRECTO DESDE EL SP
				CALL insertarCargosMigracion(BrokerName,CURRENT_TIMESTAMP,BrokerName,CAST(refParam.Batch.Mgr.idTransaccion AS INTEGER),outResultadoMsj,outResultado);			
									 
				--MOVE refPagina NEXTSIBLING REPEAT TYPE NAME;
			--END WHILE;
			
			/*IF FIELDTYPE(Environment.XMLNSC.Registros.REGISTRO) IS NOT NULL THEN
				DELETE LASTCHILD OF Environment.XMLNSC.Registros;
				SET OutputRoot.MQMD.CorrelId				= CAST(refParam.Batch.msgIdTransaccion AS BLOB);				
				SET OutputRoot.XMLNSC.MENSAJE.REGISTROS = Environment.XMLNSC.Registros;
				SET OutputRoot.XMLNSC.MENSAJE.IDGRUPO = refParam.Batch.msgIdTransaccion;
				SET OutputRoot.XMLNSC.MENSAJE.IDTRANSACCION = refParam.Batch.msgIdTransaccion;
				SET OutputRoot.XMLNSC.MENSAJE.REGISTROSGRUPO = cantidadRegistrosPorGrupo;	
				SET OutputRoot.XMLNSC.MENSAJE.REGISTROSCANTIDAD = cantidadRegistros;
				SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = obtenerColaRecepArchivo('MGRCAR2');
				SET cantidadGrupos = cantidadGrupos+1;			
				SET cantidadRegistrosPorGrupo = 0 ;							
					PROPAGATE TO TERMINAL 1;							
			END IF;
			
			DELETE FIELD Environment.XMLNSC.Registros;	
			
			*/
			CALL armarMensajeLogProceso(OutputRoot,
										CAST(refParam.Batch.idProceso AS CHARACTER), 
										CAST(refParam.Batch.Mgr.idTransaccion AS CHARACTER),     
										getTIP_LOG_INFO(),
										MessageFlowLabel,
										'Se ha finalizado la migracion de cargos ');
										
			
			PROPAGATE TO TERMINAL 3;	
		/*	CALL armarMensajeLogProceso(OutputRoot,
										CAST(refParam.Batch.idProceso AS CHARACTER), 
										CAST(refParam.Batch.Mgr.idTransaccion AS CHARACTER),    
										getTIP_LOG_INFO(),
										MessageFlowLabel,
										'Se encontraron { ' || CAST(cantidadRegistros AS CHARACTER) ||' } registros');
			
			PROPAGATE TO TERMINAL 3;
			
			*/
		/*	IF InputBody.MENSAJE.FLGCOLA THEN
				SET OutputRoot.XMLNSC.MENSAJE.CANTMENSAJE = Environment.Variables.cantidadMensaje;
				PROPAGATE TO TERMINAL 0;
			END IF;
			*/
			
			DECLARE valorEntero INTEGER 0;--CANTIDADDE REGISTROS EN BD
			DECLARE valorCadena CHARACTER '';
					 
			--CALL actualizarOperacion('CANPROCREGISTROS','',CAST(InputBody.MENSAJE.CANPROCREGISTRO AS INTEGER),valorCadena,valorEntero);
			/*CALL actualizarOperacion('CANPROCREGISTROS','',cantidadRegistros,valorCadena,valorEntero);
			
			 
			IF CAST(InputBody.MENSAJE.CANTOTREGISTRO AS INTEGER) = valorEntero THEN
			
				SET OutputRoot.MQMD.Format 					= 'MQHRF2  '; 
				SET OutputRoot.MQRFH2.usr.Parametros		= refParam;		 		 				   
				SET OutputRoot.XMLNSC.MENSAJE.TOTALREGISTROS= cantidadRegistros; --cantidad registros de cargos
				SET OutputRoot.XMLNSC.MENSAJE.IDTRANSACCION = refParam.Batch.msgIdTransaccion;
				SET OutputRoot.XMLNSC.MENSAJE.FECHAPROCESO 	= refParam.Batch.fechaProceso;
				SET OutputRoot.XMLNSC.MENSAJE.COLAGETRECEP	= obtenerColaRecepArchivo('MGRCAR2');
				--SET OutputRoot.XMLNSC.MENSAJE.HORARIO	 	= refParam.Batch.horario;
				SET OutputRoot.XMLNSC.MENSAJE.COLAHORARIO 	= 'IB.BTH.MGRCAR2.REGARCHIVO.REQ.01';
				SET OutputRoot.XMLNSC.MENSAJE.CANREGTRANS	= 400 ;
				SET OutputRoot.XMLNSC.MENSAJE.CANGRUPOS		= cantidadRegistros;
				SET OutputRoot.XMLNSC.MENSAJE.QMPROCESO		= QueueManagerName;								
				SET OutputRoot.XMLNSC.MENSAJE.PROCESAR 		= getSI();		
				--TODO :::fin
			
				PROPAGATE TO TERMINAL 2;
				
			ELSE
				
				SET OutputRoot.XMLNSC.MENSAJE.CANTMENSAJE = InputBody.MENSAJE.CANTMENSAJE; 
				PROPAGATE TO TERMINAL 0;
			
			END IF;
			*/
				--Envio de la validacion del fin de archivo

			SET OutputRoot.MQMD.Format = 'MQHRF2  ';
			SET OutputRoot.MQRFH2.usr = refParam;	
					
			SET OutputRoot.XMLNSC.MENSAJE.IDTRANSACCION = refParam.Batch.msgIdTransaccion;
			SET OutputRoot.XMLNSC.MENSAJE.Parametros = refParam;
			PROPAGATE TO TERMINAL 0;
			
			
			return false;
	END;
END MODULE;
