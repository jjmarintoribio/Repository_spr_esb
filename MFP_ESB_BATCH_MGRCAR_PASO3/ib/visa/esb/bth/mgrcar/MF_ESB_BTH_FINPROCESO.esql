BROKER SCHEMA ib.visa.esb.bth.mgrcar
PATH ib.visa.esb.bth;

CREATE COMPUTE MODULE MF_ESB_BTH_FINPROCESO_EjecutarFinalizacionCarga
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET Environment.Variables.idProcesoMigracion = InputRoot.MQRFH2.usr.Parametros.Batch.Mgr.idTransaccion;
		SET Environment.MQRFH2 = InputRoot.MQRFH2;
		
		CALL armarMensajeLogProceso(OutputRoot,
									InputRoot.MQRFH2.usr.Parametros.Batch.idProceso, 
									InputRoot.MQRFH2.usr.Parametros.Batch.Mgr.idTransaccion,  --TABLA PROCESO MIGRACION 
									getTIP_LOG_INFO(),
									MessageFlowLabel,
									'Se termino de migrar los pagos , finalizando el proceso ');
		
		PROPAGATE TO TERMINAL 1;
				 
		--CALL actualizarAfiliacionMigracion(BrokerName , CURRENT_TIMESTAMP ,BrokerName ,CAST(InputRoot.MQRFH2.usr.Parametros.Batch.Mgr.idTransaccion AS INTEGER));
		
		CALL armarMensajeLogProceso(OutputRoot,
									InputRoot.MQRFH2.usr.Parametros.Batch.idProceso, 
									InputRoot.MQRFH2.usr.Parametros.Batch.Mgr.idTransaccion,   
									getTIP_LOG_INFO(),
									MessageFlowLabel,
									'Se termino de actualizar las afiliaciones , finalizando el proceso ');
		PROPAGATE TO TERMINAL 1;
		
		
			--((3)) se cambia el semaforo a verde
		SET OutputRoot.XMLNSC.MENSAJE.PROCESANDO = getNO();
		PROPAGATE TO TERMINAL 2 ;
		
		
		--TODO GENERANDO ARCHIVO DE LOG
		
		/*
		SET Environment.flagFinArchivo = TRUE;
		
		WHILE Environment.flagFinArchivo IS TRUE DO
			SET OutputRoot.MQMD.CorrelId = CAST(InputRoot.MQRFH2.usr.Parametros.Batch.Mgr.idProcesoMigracion AS BLOB);
			PROPAGATE TO TERMINAL 4;
			
		END WHILE;
		*/
		
		--refParam.Batch.Mgr.idProcesoMigracion

		--((3)) Se cambia de estado la instancia del proceso 
 
		/*CALL actualizarProcesoActualizacionTarjetasBD(CAST(InputRoot.MQRFH2.usr.Parametros.Batch.idTransaccion AS INTEGER),
														CURRENT_TIMESTAMP,
														NULL,
														CURRENT_TIMESTAMP,
														getEST_1_PROCESO()
														) ;
		*/		
		/*
		SET OutputRoot.Properties.MessageSet 	= 'MS_ESB_BATCH_GENERICO';
		SET OutputRoot.Properties.MessageType 	= 'MSJ_LANZADOR';
		SET OutputRoot.Properties.MessageFormat = 'CWF';			
		SET OutputRoot.MQMD.Format 					= 'MQHRF2  '; 
		SET OutputRoot.MQRFH2 = InputRoot.MQRFH2;				
		SET OutputRoot.MRM.MENSAJE.IDPROCESO 	= '27';
		SET OutputRoot.MRM.MENSAJE.FILLER 		= InputRoot.MQRFH2.usr.Parametros.Batch.Mgr.idTransaccion;
		
		PROPAGATE TO TERMINAL 2;			

	--((5)) Envio de alertas al fin  del proceso
		SET Environment.Parametros = InputRoot.MQRFH2.usr.Parametros;		
		SET Environment.Parametros.Batch.horaFinProceso = obtenerFechaHoraActual(2);
		 
		IF ( COALESCE(InputRoot.MQRFH2.usr.Parametros.Servicio.NOTIFICA,getNO())= getSI()) THEN  
			CALL prepararMensajeCorreoAlerta(OutputRoot,getTIPO_ALERTA_2(),Environment.Parametros,NULL,NULL);
			PROPAGATE TO TERMINAL 3;
		END IF;		

					
		*/
		RETURN FALSE;
	END;
END MODULE;




CREATE COMPUTE MODULE MF_ESB_BTH_FINPROCESO_ControlarError
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	--((1)) se cambia el semaforo a verde
		SET OutputRoot.XMLNSC.MENSAJE.PROCESANDO = getNO();

		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE MF_ESB_BTH_FINPROCESO_FinalizarCtrlSecuencia
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		--((3)) se cambia el semaforo a verde
		SET OutputRoot.XMLNSC.MENSAJE.PROCESANDO = getNO();
		RETURN TRUE;
	END;
END MODULE;





CREATE COMPUTE MODULE MF_ESB_BTH_FINPROCESO_ContadorImportaciones
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.finArchivo.TotalRegistrosOk 	= CAST(COALESCE(Environment.finArchivo.TotalRegistrosOk,0) AS INTEGER) + CAST(InputBody.MENSAJE.CANTIDADREGISTROSOK AS INTEGER);
		SET Environment.finArchivo.TotalRegistrosFail 	= CAST(COALESCE(Environment.finArchivo.TotalRegistrosFail,0) AS INTEGER) + CAST(InputBody.MENSAJE.CANTIDADREGISTROSFAIL AS INTEGER);
		SET Environment.finArchivo.TotalRegistros  		= InputBody.MENSAJE.CANTIDADREGISTROS;
	END;
END MODULE;

CREATE COMPUTE MODULE MF_ESB_BTH_FINPROCESO_ActualizarImportacionCantidad
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
		DECLARE estadoProcesoImp INTEGER 2;-- ESTADO DE PROCESO (PROCESADO)
		DECLARE intRegistrosTotal INTEGER CAST(COALESCE(Environment.finArchivo.TotalRegistros,0) AS INTEGER);
		DECLARE intRegistrosFail INTEGER;
		DECLARE refParam REFERENCE TO Environment.MQRFH2.usr.Parametros;
		
		SET intRegistrosFail = CAST(COALESCE(Environment.finArchivo.TotalRegistrosFail,0) AS INTEGER) + CAST(COALESCE(Environment.Parametros.registrosErrorDfdl,0) AS INTEGER);
		SET Environment.flagFinArchivo=FALSE;
		
		IF intRegistrosTotal = intRegistrosFail THEN
			SET estadoProcesoImp = 3; -- ESTADO DE PROCESO (FALLIDO)
		END IF;
			
			
		CALL actualizarProcesoMigracion(24,
											 CURRENT_TIMESTAMP,
											 CAST(COALESCE(Environment.finArchivo.TotalRegistrosOk,0) AS INTEGER),
											 intRegistrosFail,
											 NULL,--EL TOTAL DE REGISTROS YA ESTA ACTUALIZADO EN EL PROCESO MGRCAR1 , MF_ESB_BTH_RECEPARCHIVO_DESENCRIPT.
											 NULL,--SE HACE EL CALCULO DENTRO DEL SP
											 CAST(Environment.Variables.idProcesoMigracion AS INTEGER));	
			
		/*CALL actualizarProcesoImportacion(CAST(Environment.Variables.idProcesoMigracion AS INTEGER),
										  CURRENT_TIMESTAMP,
										  CAST(COALESCE(Environment.finArchivo.TotalRegistrosOk,0) AS INTEGER),
										  intRegistrosFail,
										  intRegistrosTotal,
										  estadoProcesoImp, 
										  CAST( Environment.finArchivo.IdTransaccion AS INTEGER));*/
		--TODO :: INICIO								  
		SET OutputLocalEnvironment.Destination.File.Directory = COALESCE(refParam.Servicio.PATHFILERROR,refParam.ESB.PATHFILERROR) || 'temp/';
		SET OutputLocalEnvironment.Destination.File.Name = REPLACE(refParam.Batch.Mgr.nombreArchivo,'.pgp','.dat') || '.log';
		--
		PROPAGATE TO TERMINAL 0 DELETE NONE;
		PROPAGATE TO TERMINAL 1;								  
		RETURN FALSE;
	END;
END MODULE;


CREATE COMPUTE MODULE MF_ESB_BTH_FINPROCESO_MoverArchivoTemp
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE refParam REFERENCE TO Environment.MQRFH2.usr.Parametros;
		SET OutputLocalEnvironment.Destination.File.Directory = COALESCE(refParam.Servicio.PATHFILERROR,refParam.ESB.PATHFILERROR) || 'temp/';		
		SET OutputLocalEnvironment.Destination.File.Name = REPLACE(refParam.Batch.Mgr.nombreArchivo,'.pgp','.dat') || '.log';		
		RETURN TRUE;
	END;
END MODULE;

CREATE COMPUTE MODULE MF_ESB_BTH_FINPROCESO_MoverArchivoFinal
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE refParam REFERENCE TO Environment.MQRFH2.usr.Parametros;
		SET OutputRoot = InputRoot;		
		SET OutputLocalEnvironment.Destination.File.Directory = COALESCE(refParam.Servicio.PATHFILERROR,refParam.ESB.PATHFILERROR);
		SET OutputLocalEnvironment.Destination.File.Name = REPLACE(refParam.Batch.Mgr.nombreArchivo,'.pgp','.dat') || '.log';
		RETURN TRUE;
	END;
END MODULE;


