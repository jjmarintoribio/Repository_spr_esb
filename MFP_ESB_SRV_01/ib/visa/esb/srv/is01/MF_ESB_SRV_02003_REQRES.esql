/*
 *
 * Nombre		: MF_ESB_SRV_02003_REQRES.esql
 * Proposito	: Flujo especifico para el servicio 02003
 * Fecha		: 2014-03-28
 * Autores		: Ruben Mejia - Synopsis
 * Version		: 1.0
 * 
 *--------------------------------------------------------------------
 */ 
BROKER SCHEMA ib.visa.esb.srv.is01
PATH ib.visa.esb.core; 

CREATE COMPUTE MODULE MF_ESB_SRV_02003_REQRES_AdecuarMensaje
	CREATE FUNCTION Main() RETURNS BOOLEAN
	
	BEGIN
 
		--((1)) Se prepara el formato del mensaje de salida hacia la app proveedora
		CALL setearPropiedadesMensaje(OutputRoot,'','','');
		
		--((2)) Se copian las cabeceras
		SET OutputRoot.MQMD 		= InputRoot.MQMD;
		SET OutputRoot.MQRFH2.usr 	= InputRoot.MQRFH2.usr;
	
		--((3)) Adecuacion de Cabecera MQMD
		CALL setearPropiedadesMQMD(OutputRoot.MQMD, InputRoot.MQMD,InputRoot.MQRFH2.usr.Parametros.Servicio);
		
		--((3.1)) Almacenamiento de entrada al Environment
		CREATE LASTCHILD OF Environment DOMAIN 'XMLNSC';
		--DECLARE parseOptions INTEGER BITOR(ValidateContent, ValidateValue, ValidateLocalError);
		CREATE LASTCHILD OF Environment.XMLNSC PARSE (InputBody.BLOB
									                 --OPTIONS parseOptions
									                 FORMAT 'XMLNSC');	
		
		--((3.2)) Validaciones de negocio
 		DECLARE refIn REFERENCE TO Environment.XMLNSC.XMLNSC.INTEGREQ.DETALLE.DATOS.SolicitudAfiliacion.DetalleAfiliacion;
		 
		--((4)) Se arma el mensaje soap con la estructura que CavaliSerive espera
		DECLARE nsSrv NAMESPACE getNSSPRWEB_SCHEMA();
		DECLARE nsSoap NAMESPACE getNS_SOAP();  
		DECLARE namMetodo NAME 'RegistrarSolicitudAfiliacionRequest'; 
		  
		CALL prepararEnvelopeSoapReqSPRWEBServices(OutputRoot,nsSoap,nsSrv,namMetodo);
				
		--inicio de mapeo
		CREATE FIELD OutputRoot.XMLNS.nsSoap:Envelope.nsSoap:Body.nsSrv:namMetodo.nsSrv:Detalle.nsSrv:SolicitudAfiliacion.nsSrv:DetalleAfiliacion;
		DECLARE refOut REFERENCE TO OutputRoot.XMLNS.nsSoap:Envelope.nsSoap:Body.nsSrv:namMetodo.nsSrv:Detalle.nsSrv:SolicitudAfiliacion.nsSrv:DetalleAfiliacion;
		
		SET refOut.nsSrv:Comercio.nsSrv:Codigo						 			 	=	refIn.Comercio.Codigo;
		SET refOut.nsSrv:Comercio.nsSrv:NombreComercial				 			 	=	refIn.Comercio.NombreComercial;
		SET refOut.nsSrv:Comercio.nsSrv:Ruc							 			 	=	refIn.Comercio.Ruc;
		SET refOut.nsSrv:Comercio.nsSrv:Anexo										=	refIn.Comercio.Anexo;
		SET refOut.nsSrv:Comercio.nsSrv:ContactoAdministrativo.nsSrv:NombreCompleto	=	refIn.Comercio.ContactoAdministrativo.NombreCompleto;
		SET refOut.nsSrv:Comercio.nsSrv:ContactoAdministrativo.nsSrv:Email		 	=	refIn.Comercio.ContactoAdministrativo.Email;				
		SET refOut.nsSrv:Comercio.nsSrv:ContactoNotificacion.nsSrv:NombreCompleto  	=	refIn.Comercio.ContactoNotificacion.NombreCompleto;
		SET refOut.nsSrv:Comercio.nsSrv:ContactoNotificacion.nsSrv:Email			=	refIn.Comercio.ContactoNotificacion.Email;
		SET refOut.nsSrv:Comercio.nsSrv:Moneda									 	=	refIn.Comercio.Moneda;
		
		SET refOut.nsSrv:Producto.nsSrv:Codigo										=	refIn.Producto.Codigo;
		SET refOut.nsSrv:Producto.nsSrv:Nombre										=	refIn.Producto.Nombre;
		SET refOut.nsSrv:Producto.nsSrv:Moneda			 							=	refIn.Producto.Moneda;
		
		SET refOut.nsSrv:Tarjeta.nsSrv:Numero										=	refIn.Tarjeta.Numero;
		SET refOut.nsSrv:Tarjeta.nsSrv:MesExpiracion								=	refIn.Tarjeta.MesExpiracion;
		SET refOut.nsSrv:Tarjeta.nsSrv:AnhoExpiracion								=	refIn.Tarjeta.AnhoExpiracion;
		
		SET refOut.nsSrv:Tarjetahabiente.nsSrv:Nombres						 		=	refIn.Tarjetahabiente.Nombres;
		SET refOut.nsSrv:Tarjetahabiente.nsSrv:ApellidoPaterno						=	refIn.Tarjetahabiente.ApellidoPaterno;
		SET refOut.nsSrv:Tarjetahabiente.nsSrv:ApellidoMaterno						=	refIn.Tarjetahabiente.ApellidoMaterno;
		SET refOut.nsSrv:Tarjetahabiente.nsSrv:TipoDocumentoIdentidad				=	refIn.Tarjetahabiente.TipoDocumentoIdentidad;
		SET refOut.nsSrv:Tarjetahabiente.nsSrv:NumeroDocumentoIdentidad 			=	refIn.Tarjetahabiente.NumeroDocumentoIdentidad;
		SET refOut.nsSrv:Tarjetahabiente.nsSrv:Telefono								=	refIn.Tarjetahabiente.Telefono;				
		SET refOut.nsSrv:Tarjetahabiente.nsSrv:Email   								=	refIn.Tarjetahabiente.Email;
		
		SET refOut.nsSrv:Beneficiario.nsSrv:NumeroIdentificacion					=	refIn.Beneficiario.NumeroIdentificacion;
		SET refOut.nsSrv:Beneficiario.nsSrv:Nombres									=	refIn.Beneficiario.Nombres;
		SET refOut.nsSrv:Beneficiario.nsSrv:ApellidoPaterno							=	refIn.Beneficiario.ApellidoPaterno;
		SET refOut.nsSrv:Beneficiario.nsSrv:ApellidoMaterno							=	refIn.Beneficiario.ApellidoMaterno;
		
		SET refOut.nsSrv:MontoMaximo												=	refIn.MontoMaximo;
		SET refOut.nsSrv:Moneda														=	refIn.Moneda;
		SET refOut.nsSrv:FechaPago			 										=	refIn.FechaPago;
			
		SET OutputRoot.XMLNS.nsSoap:Envelope.nsSoap:Body.nsSrv:namMetodo.nsSrv:Detalle.nsSrv:SolicitudAfiliacion.nsSrv:FechaSolicitudAfiliacion = 
			Environment.XMLNSC.XMLNSC.INTEGREQ.DETALLE.DATOS.SolicitudAfiliacion.FechaSolicitudAfiliacion;
			
		--Guardado del mensaje de salida formateado para registrarlo en auditoria
		CREATE LASTCHILD OF Environment DOMAIN 'XMLNS';
		SET Environment.XMLNS = OutputRoot.XMLNS;	
				
		--((5)) Se indica la cola de salida del flujo generico 
		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = obtenerColaEntradaFlujoSalida(InputRoot.MQRFH2.usr);		

		--((6)) Se registra Auditoria
		--SET OutputRoot.MQRFH2.usr.Parametros.Auditoria.indTransaccion = COALESCE(refIn.participantNegotiatorCode,'');
				
		PROPAGATE TO TERMINAL 1;

		CALL armarAuditoriaEventoFormateo(OutputRoot,
							InputRoot.MQMD.MsgId,
							InputRoot.MQRFH2.usr,
							Environment.XMLNS,
							NULL,
							COALESCE(refIn.Codigo,''),
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'',
							'');

		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = getCOLA_ENTRADA_FLUJO_AUDITORIA();
		PROPAGATE TO TERMINAL 2;
		
		RETURN FALSE;
	END;
			
END MODULE;
		
CREATE COMPUTE MODULE MF_ESB_SRV_02003_REQRES_PrepararRespuesta
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		  
		--((0)) Validacion si el mensaje tuvo un problema al enviarse al destino
		CALL validarRespuestaError(InputRoot);  
		
		--((1)) Se prepara el formato del mensaje de salida hacia la app proveedora
		CALL setearPropiedadesMensaje(OutputRoot,'MS_ESB_CORE_INPUTHTTP','MENSAJERES','');
		
		--((2)) Se copian las cabeceras
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.MQRFH2.usr.Parametros = InputRoot.MQRFH2.usr.Parametros;
		
		--((3)) Adecuacion de Cabecera MQMD
		CALL setearPropiedadesMQMD(OutputRoot.MQMD, InputRoot.MQMD,InputRoot.MQRFH2.usr.Parametros.Servicio);	
				
		--((4)) Preparacion del mensaje Soap de respuesta generica
		DECLARE nsSrv NAMESPACE InputRoot.MQRFH2.usr.Parametros.Protocolo.Datos.Namespace;
		DECLARE nsSoap NAMESPACE getNS_SOAP();
		DECLARE namMetodo NAME 'RegistrarSolicitudAfiliacionRequest'; 
		
		DECLARE refInput REFERENCE TO InputRoot.XMLNSC.nsSoap:Envelope.nsSoap:Body.nsSrv:namMetodo;

		--((4.1)) Validacion de la cabecera de respuesta del servicio proveedor
		CALL validarRespuestaSPRWeb(refInput.nsSrv:Cabecera.nsSrv:Codigo,
									refInput.nsSrv:Cabecera.nsSrv:Descripcion,
									OutputRoot, 
									InputRoot,
									nsSoap,
									nsSrv);
		 
		--((5))Guardado del mensaje de salida formateado para registrarlo en auditoria
		CREATE LASTCHILD OF Environment DOMAIN 'XMLNS';
		SET Environment.XMLNS = OutputRoot.XMLNS;
	
        --((6))Se asigna la cola generica de respuesta del protocolo
		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = obtenerColaEntradaProtocoloRespuesta(InputRoot.MQRFH2.usr);
		PROPAGATE TO TERMINAL 1;
		
		--((7)) Se registra Auditoria
		
		CALL armarAuditoriaEventoRespuestaConsumidor(OutputRoot,
							InputRoot.MQMD.MsgId,
							InputRoot.MQRFH2.usr,
							Environment.XMLNS,
							NULL); 
 
		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = getCOLA_ENTRADA_FLUJO_AUDITORIA();
		PROPAGATE TO TERMINAL 2;

		RETURN FALSE;	
	END;
END MODULE;

