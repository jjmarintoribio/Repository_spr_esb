BROKER SCHEMA ib.visa.esb.bth.tds
PATH ib.visa.esb.bth;
DECLARE cacheHostSFTP SHARED CHARACTER;

CREATE COMPUTE MODULE MF_ESB_BTH_IMPARCH_TDS_CARGO_INI_CE_GetFiles
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

			--((1)) Se obtienen los parametros de BD
			CALL obtenerParametrosBD(getTIPO_SERVICIO_GENERAL(),Environment.Params[]);
	 
	 		SET Environment.host 	= THE (SELECT ITEM P.VALOR FROM Environment.Params[] as P WHERE P.CODIGO_ATRIBUTO = 'HOSTSEGURIDAD');
	 		SET Environment.port 	= THE (SELECT ITEM P.VALOR FROM Environment.Params[] as P WHERE P.CODIGO_ATRIBUTO = 'PORTSEGURIDAD');
	 		SET Environment.lmkId 	= THE (SELECT ITEM P.VALOR FROM Environment.Params[] as P WHERE P.CODIGO_ATRIBUTO = 'LMKID');
	
			--((2)) Se obtienen las llaves encriptadas de BD
			CALL obtenerParametrosSeguridadBD(Environment.Llaves[]);
	
	 		SET Environment.llaveMaestra	= THE (SELECT ITEM L.VAL_LLAVE FROM Environment.Llaves[] as L WHERE L.TIPO_LLAVE = 0);
	 		SET Environment.llaveHexadecimal = THE (SELECT ITEM L.VAL_LLAVE FROM Environment.Llaves[] as L WHERE L.TIPO_LLAVE = 13);
	  
			--((3)) Se incia el proxy en java 		      
	 		    		         
	 		CALL iniciarProxy(Environment.host,Environment.port, Environment.lmkId );
	 		
	 		--((4)) Se manda a desencriptar la llave	 			 		
			DECLARE llaveDesencriptada CHARACTER desencriptarLlave(Environment.llaveMaestra, Environment.llaveHexadecimal);
			SET Environment.llaveDesencriptada = llaveDesencriptada;
				
			SET Environment.archivos = getFiles(llaveDesencriptada);
			
			IF (LENGTH(Environment.archivos)>0 ) THEN
				SET cacheHostSFTP = SUBSTRING(Environment.archivos BEFORE ':');
				RETURN TRUE;
			END IF;
			
			RETURN FALSE;
			
	END;


	/*CREATE FUNCTION getFiles()
	RETURNS CHARACTER
	LANGUAGE JAVA
	EXTERNAL NAME "ib.visa.esb.bth.gen.GetFilesCargosCE.getFiles";*/
	
	CREATE FUNCTION getFiles(IN llaveDesencriptada CHARACTER) 
	RETURNS CHARACTER
	LANGUAGE JAVA
	EXTERNAL NAME "ib.visa.esb.bth.gen.GetFilesCargosCE.getFiles";

	/*
	Inicia el proxy de seguridad
	*/
	CREATE FUNCTION  iniciarProxy(IN chrHost CHARACTER, IN intPort CHARACTER, IN chrLmkId CHARACTER)
 	LANGUAGE JAVA 
 	EXTERNAL NAME "ib.visa.esb.bth.gen.GetFilesCargosCE.iniciarProxy";
 	
 	/* 
	Desencripta las llaves para mantenerlo en memoria de las clases Java 
	*/
	CREATE FUNCTION  desencriptarLlave(IN chrLlaveMaestra CHARACTER, IN chrLlaveHexEncriptada CHARACTER)
 	RETURNS CHARACTER
 	LANGUAGE JAVA 
 	EXTERNAL NAME "ib.visa.esb.bth.gen.GetFilesCargosCE.desencriptarLlave";
 	
END MODULE;



CREATE COMPUTE MODULE MF_ESB_BTH_IMPARCH_TDS_CARGO_INI_CE_EditarArchivoCargo
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		DECLARE chrCodComercio CHARACTER SUBSTRING(InputLocalEnvironment.File.Name BEFORE '_');
		DECLARE chrFecModificacion CHARACTER SUBSTRING(SUBSTRING(InputLocalEnvironment.File.Name AFTER '_') BEFORE '_');
		DECLARE chrNomArchivo CHARACTER SUBSTRING(SUBSTRING(InputLocalEnvironment.File.Name AFTER '_') AFTER '_');
		DECLARE chrDirOutLog CHARACTER chrCodComercio|| '/OUT/';
		DECLARE chrFileOutLog CHARACTER chrFecModificacion || '_' || SUBSTRING(chrNomArchivo FROM 1 FOR LENGTH(chrNomArchivo)-4)|| '.dat.log';

		CALL obtenerInfoComercio(chrCodComercio,Environment.ResultSet1[]);

		IF (Environment.ResultSet1.EST_COMERCIO = 2) THEN --2 Inactivo

			CREATE LASTCHILD OF Environment DOMAIN 'XMLNSC';
			SET Environment.XMLNSC.resultado.nro_registro = 0;
			SET Environment.XMLNSC.resultado.mensaje = 'COMERCIO ESTA INACTIVO EN SPR';
			SET Environment.XMLNSC.resultado.codigo = 'FALLIDO';

			SET OutputRoot.BLOB.BLOB = ASBITSTREAM(Environment.XMLNSC, InputProperties.Encoding, getENCODING());
			SET OutputLocalEnvironment.Destination.File.Remote.ServerDirectory = chrDirOutLog;
			SET OutputLocalEnvironment.Destination.File.Name = chrFileOutLog;

			PROPAGATE TO TERMINAL 4;


		ELSEIF (Environment.ResultSet1.EST_COMERCIO = 1) THEN --1 Activo

			CREATE LASTCHILD OF Environment.metadata DOMAIN 'XMLNSC';
			CREATE FIRSTCHILD OF Environment.metadata.XMLNSC TYPE XMLNSC.XmlDeclaration NAME 'XmlDeclaration'; 
			SET Environment.metadata.XMLNSC.(XMLNSC.XmlDeclaration)*.(XMLNSC.Attribute)Version = '1.0'; 
			SET Environment.metadata.XMLNSC.(XMLNSC.XmlDeclaration)*.(XMLNSC.Attribute)Encoding = 'UTF-8'; 
			SET Environment.metadata.XMLNSC.(XMLNSC.XmlDeclaration)*.(XMLNSC.Attribute)StandAlone = 'yes'; 
			
			CREATE FIELD Environment.metadata.XMLNSC.importacion;
			DECLARE refMetadata REFERENCE TO Environment.metadata.XMLNSC.importacion;

			SET refMetadata.rutaArchivo 			= '/' || chrCodComercio || '/IN/' || chrNomArchivo ;
			SET refMetadata.tipoImportacion 		= 4;
			SET refMetadata.tipoArchivoImportacion 	= 8;
			SET refMetadata.idComercio 				= Environment.ResultSet1.ID_COMERCIO;
			SET refMetadata.codComercio 			= chrCodComercio;
			SET refMetadata.tipoArchivoLog 			= 9;
			SET refMetadata.ipCreacion 				= cacheHostSFTP;
			SET refMetadata.modulo 					= 1;
			SET refMetadata.fechaCreacion 			= obtenerFechaHoraActual(2);
			SET refMetadata.fechaArchivoComercio 	= chrFecModificacion;
			SET refMetadata.nombreArchivoComercio 	= chrNomArchivo;
			SET refMetadata.correoAdmComercio 		= Environment.ResultSet1.EMAIL_CONTACTO_ADMINISTRATIVO;
			SET refMetadata.tipoCanal 				= 'CE';
			SET refMetadata.rutaOutLog 				= chrDirOutLog;
			SET refMetadata.fileOutLog 				= chrFileOutLog;
			SET refMetadata.codigoUsuarioCreacion 	= BrokerUserId;

			--SET OutputLocalEnvironment.Destination.File.Directory = ;
			SET OutputLocalEnvironment.Destination.File.Name = 'CARGOS_' || RIGHT(REPLACE(InputLocalEnvironment.File.TimeStamp,'_',''),13) || '.dat';

			SET OutputRoot.BLOB.BLOB = ASBITSTREAM(Environment.metadata.XMLNSC CCSID getENCODING());

			PROPAGATE TO TERMINAL 1 DELETE NONE;

			SET OutputRoot = InputRoot;

			PROPAGATE TO TERMINAL 2;

		END IF;

		RETURN FALSE;
	END;


END MODULE;