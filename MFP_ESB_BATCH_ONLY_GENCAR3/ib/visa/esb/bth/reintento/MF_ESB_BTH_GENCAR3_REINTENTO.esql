BROKER SCHEMA ib.visa.esb.bth.reintento
PATH ib.visa.esb.bth;


CREATE COMPUTE MODULE MF_ESB_BTH_GETDETALLE_ObtenerLotes
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
		--((0.1)) Registrar el autorizador de transacciones
		/*DECLARE intIdTransaccion INTEGER; 	
		CALL insertarProcesoAutorizadorTransaccionBD(getID_PROCESO_5(),
														CURRENT_TIMESTAMP,
														NULL,
														NULL,
														NULL,
														getEST_0_PROCESO(),
														CURRENT_TIMESTAMP,
														intIdTransaccion);
												
		SET Environment.Parametros = InputRoot.MQRFH2.usr.Parametros;
		SET Environment.Parametros.Batch.idTransaccion = CAST(intIdTransaccion AS CHARACTER);
		
		--((0.2))Obtener Valor numerico de Parametros (Periodo de operaci√≥n)
			CALL obtenerParametro(getID_PARAMETRO_PERIODO_OPERACION(),Environment.resultSetParametros[]);
			SET Environment.Parametros.Batch.HorasPeriodoOpe	= COALESCE(Environment.resultSetParametros[1].VAL_NUMERICO,24); --periodo de operacion
		
		--((0.3)) Envio de alertas al inicio del proceso
		
		IF ( COALESCE(InputRoot.MQRFH2.usr.Parametros.Servicio.NOTIFICA,getNO())= getSI()) THEN  
			CALL prepararMensajeCorreoAlerta(OutputRoot,getTIPO_ALERTA_1(),Environment.Parametros,NULL,NULL);
			PROPAGATE TO TERMINAL 4;
		END IF;
	
 		SET OutputRoot.Properties 				= InputProperties;
		SET OutputRoot.MQMD						= InputRoot.MQMD;
		SET OutputRoot.MQRFH2.usr.Parametros	= Environment.Parametros;
 		
		--((0.4)) Envio de mensaje con los Parametros para el control de alertas
		
		SET OutputRoot.XMLNSC 		= NULL; 
		PROPAGATE TO TERMINAL 3 DELETE NONE;
		

 		DECLARE refParam REFERENCE TO OutputRoot.MQRFH2.usr.Parametros;

		  
		--((1)) Obtiene el detalle de los lotes del dia.
		  	*/	
		CALL buscarLoteComercio2(current_timestamp,Environment.ResultSet1[]);
 
		--((2)) Agrupa los Lotes segun la cantidad de nodos del BUS y la cantidad de cargos.
		
		CREATE FIELD Environment.Proceso.InfoComercios;
		DECLARE refComercios REFERENCE TO Environment.Proceso.InfoComercios;
		DECLARE refResul REFERENCE TO Environment.ResultSet1;
		
		DECLARE intInd INTEGER 0;
		DECLARE intIni INTEGER 1;
		DECLARE intAux INTEGER 1;
	
		DECLARE intCantMayor INTEGER 0; 
		DECLARE intIndLista INTEGER 1;
		DECLARE intTempCant INTEGER 0;
		 
		DECLARE intCantNodos INTEGER 1;
		    
		WHILE intIni <= intCantNodos DO 
			CREATE NEXTSIBLING OF refComercios AS refComercios REPEAT;
			SET refComercios.ComerciosUnidos 	= '';
			SET refComercios.cantCargos 	= 0;
			SET intIni = intIni + 1;
		END WHILE;

		DELETE FIRSTCHILD OF Environment.Proceso;
			  
		WHILE LASTMOVE(refResul) DO
			 
			SET intInd = obtieneIndice(intInd,intCantNodos,intIndLista);
			SET intTempCant = COALESCE(Environment.Proceso.InfoComercios[intInd].cantCargos,0) +  refResul.NRO_CARGOS;
			
			IF (intTempCant >= intCantMayor) THEN
				SET intCantMayor 	= intTempCant;
				SET intIndLista 	= intInd;
			ELSE	
				SET intInd = obtieneIndice(intInd,intCantNodos,intIndLista);
			END IF;
			
 			IF (FIELDTYPE(Environment.Proceso.InfoComercios[intInd].ListadoComercios.Comercio) IS NULL) THEN
 				CREATE FIELD Environment.Proceso.InfoComercios[intInd].ListadoComercios.Comercio[1];
 			ELSE
 				SET intAux = CARDINALITY(Environment.Proceso.InfoComercios[intInd].ListadoComercios.Comercio[])+1;
 				CREATE FIELD Environment.Proceso.InfoComercios[intInd].ListadoComercios.Comercio[intAux] ;
 			END IF;
 			
 			SET Environment.Proceso.InfoComercios[intInd].ListadoComercios.Comercio[intAux] = refResul;

			MOVE refResul NEXTSIBLING REPEAT TYPE NAME;

		END WHILE;

		CREATE NEXTSIBLING OF OutputRoot.MQRFH2 DOMAIN 'XMLNSC';
		
		--Envio de lista agrupadas de Comercios 
		
		DECLARE refLis REFERENCE TO Environment.Proceso.InfoComercios;
		WHILE LASTMOVE(refLis) DO
			
			SET OutputRoot.XMLNSC.MENSAJE 			= refLis.ListadoComercios;
			SET OutputRoot.XMLNSC.MENSAJE.QMPROCESO = QueueManagerName;--QM donde se inicio el proceso (para poder controlar la finalizacion del Proceso)
			
			--Se envia a la cola que esta en cluster en ambos Nodos para que la carga de la creacion del archivo sea balanceada
			SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = 'IB.BTH.GENCAR3.ENVIARGEN.REQ.01';		 
						  
			MOVE refLis NEXTSIBLING REPEAT TYPE NAME;

			PROPAGATE TO TERMINAL 1 DELETE NONE;

		END WHILE;
		 		
		RETURN FALSE;
	END;

END MODULE;


CREATE COMPUTE MODULE MF_ESB_BTH_GETDETALLE_EnviarGenerar
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	 	
	 	--((1)) Envio individual de los comerciones con sus lotes
	 	
	 	DECLARE refLis REFERENCE TO InputBody.MENSAJE.Comercio;	
 		/*(0x03000000:PCDataField):ID_COMERCIO                 = 85 (INTEGER)
      (0x03000000:PCDataField):COD_COMERCIO                = '100093903' (CHARACTER)
      (0x03000000:PCDataField):TIPO_ARCHIVO_LOTE           = 3 (INTEGER)
      (0x03000000:PCDataField):FLG_ENMASCARAMIENTO_TARJETA = 1 (DECIMAL)
      (0x03000000:PCDataField):NRO_CARGOS                  = 1 (INTEGER)
      (0x03000000:PCDataField):MTO_TOTAL                   = 150.00 (DECIMAL)
 		*/
		WHILE LASTMOVE(refLis) DO
			
			
			--SET OutputRoot.Properties 	= InputProperties;		
			SET OutputRoot.XMLNSC.MENSAJE 	= refLis;			
  			CALL buscarLoteComercioDetalle2(CURRENT_TIMESTAMP,
  											85, 
  											OutputRoot.XMLNSC.MENSAJE.Lote[]);
		 		 				  
			PROPAGATE TO TERMINAL 1;

			--((2)) Registro de Log del Proceso
		
			MOVE refLis NEXTSIBLING REPEAT TYPE NAME;
			
			
			--((3)) Envio de mensaje para el control de finalizacion		
		END WHILE;
		
		RETURN FALSE;
					
	END;

	
END MODULE;

 

CREATE COMPUTE MODULE MF_ESB_BTH_GENARCHIVO_GenerarArchivo
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		--((0)) Obtener la lista de cargos por listado de Lotes
  
	--	DECLARE refParam REFERENCE TO InputRoot.MQRFH2.usr.Parametros;	
		
			
			
			
			
	
		CALL buscarPagosComercio2(
									Environment.Pagos[]);
									
 
		
		DECLARE intAutTraCom,intCantAprv, intCantRech, intInd INTEGER 0;
		DECLARE chrFecActual,chrFecActualDetalle CHARACTER; 
		DECLARE intLote INTEGER;
		
				
		DECLARE chrNomArchivo CHARACTER  '100093903'
										|| '_'  
										|| '2015-05-07'	
										|| '.DAT';


		--((1)) Validacion del tipo de archivo de lote
		
		IF true THEN  -- Tipo de archivo de 85 caracteres. Diferentes a los otros 3 tipos  

		
			--//********* CABECERA ARCHIVO  (Tipo 3, 2, 1)**//
			--//********************************************//
			
		
					SET OutputRoot.Properties.MessageSet 		= 'MS_ESB_BATCH_GENCARGOS';			
					SET OutputRoot.Properties.MessageType 		= 'MSJ_CABECERA_RES_INI';	
					SET OutputRoot.Properties.MessageFormat 	= 'CWF';		
			
			
			SET chrFecActual = '07052015';
			
			/*SET OutputRoot.Properties.MessageSet 		= 'MS_ESB_BATCH_GENCARGOS';			
			SET OutputRoot.Properties.MessageType 		= 'MSJ_CABECERA_RES_INI';	
			SET OutputRoot.Properties.MessageFormat 	= 'CWF';*/	
			CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MRM';	
			  
			CREATE FIELD OutputRoot.MRM.MENSAJE;  
			DECLARE refItems REFERENCE TO OutputRoot.MRM.MENSAJE;
							 
			SET refItems.TIPOREGISTRO		= 'S';
			SET refItems.FECHAPROCESO		= chrFecActual;
			SET refItems.ESPACIO			= '';
			SET refItems.TOTALTRANSACCIONES	= RIGHT(REPLICATE('0',6)  || CAST(CARDINALITY(Environment.Pagos[]) AS CHARACTER),6);
			SET refItems.FILLER1			= '';
			SET refItems.CODRESULTADO		= '';
			SET refItems.FILLER2			= '';
			SET refItems.MSJRESPUESTA		= '';
			SET refItems.FILLER3			= '';
			
			
			
			SET OutputLocalEnvironment.Destination.File.Directory 	= '/storage_ib/comercios_rpta/';
			SET OutputLocalEnvironment.Destination.File.Name 		= chrNomArchivo;
			
			PROPAGATE TO TERMINAL 1;
			
			--//*********CABECERA LOTE****************//
			--//***************************************//	
			
			SET chrFecActualDetalle = '20150507';
		
	
			
			
			
								SET OutputRoot.Properties.MessageSet 		= 'MS_ESB_BATCH_GENCARGOS';			
								SET OutputRoot.Properties.MessageType 		= 'MSJ_CARGO_RES';	
								SET OutputRoot.Properties.MessageFormat 	= 'CWF';		
						
						
						
						CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MRM';	
						
						CREATE FIELD OutputRoot.MRM.MENSAJE;
						DECLARE refItemd REFERENCE TO OutputRoot.MRM.MENSAJE;
		
						SET intLote = 3925;
										
						WHILE  (intLote = Environment.Pagos[intInd+1].ID_LOTE) DO											
							
							SET intInd = intInd + 1;		
		
							SET refItemd.TIPOREGISTRO		= 'D'; 
							SET refItemd.CODCOMERCIO		= '100093903';
							
							
								SET refItemd.NROTARJETA		= Environment.Pagos[intInd].NRO_TARJETA_ENMASCARADO;  
							
							
							SET refItemd.IMPORTE			= RIGHT(REPLICATE('0',12) || REPLACE(CAST(Environment.Pagos[intInd].MTO_TOTAL AS CHARACTER),'.',''),12);
							SET refItemd.CODCLIENTE			= Environment.Pagos[intInd].NRO_IDENTIFICACION_BENEFICIARIO;
							SET refItemd.FECHACARGO			= CAST(Environment.Pagos[intInd].FEC_PROCESO_PAGO AS CHAR FORMAT 'yyyyMMdd');  
							SET refItemd.MESVCTOTARJETA		= Environment.Pagos[intInd].NRO_MES_VENCIMIENTO_TARJETA;
							SET refItemd.ANOVCTOTARJETA		= RIGHT(CAST(Environment.Pagos[intInd].NRO_ANHO_VENCIMIENTO_TARJETA AS CHARACTER),2);
							SET refItemd.CODRESULTADO		= Environment.Pagos[intInd].COD_RESULTADO;
							SET refItemd.NROINTENTOS		= RIGHT(REPLICATE('0',2) || CAST(Environment.Pagos[intInd].NRO_REINTENTOS AS CHARACTER),2);
							SET refItemd.FECHATRANSACCION	= CAST(Environment.Pagos[intInd].FEC_TRANSACCION AS CHAR FORMAT 'yyMMdd');  
							SET refItemd.HORATRANSACCION	= CAST(Environment.Pagos[intInd].FEC_TRANSACCION AS CHAR FORMAT 'HHmmss');
							SET refItemd.NROTERMINAL		= COALESCE(Environment.Pagos[intInd].NRO_TERMINAL,'');
							SET refItemd.MSJTERMINAL		= COALESCE(Environment.Pagos[intInd].DESC_MENSAJE_TERMINAL,'');
							SET refItemd.CODRESPUESTA		= COALESCE(Environment.Pagos[intInd].COD_RESPUESTA,'');
							SET refItemd.NROREFERENCIA		= COALESCE(Environment.Pagos[intInd].NRO_RECIBO,'');
							
							
								SET refItemd.CODCARGO			= Environment.Pagos[intInd].ID_CARGO;
								SET refItemd.CODPRODUCTO		= Environment.Pagos[intInd].ID_PRODUCTO;
								SET refItemd.CODTRANSACCION		= COALESCE(Environment.Pagos[intInd].COD_TRANSACCION,'');
								SET refItemd.CODAUTORIZACION	= COALESCE(Environment.Pagos[intInd].COD_AUTORIZACION,'');
							
		
							IF (Environment.Pagos[intInd].COD_RESULTADO ='AA' AND SUBSTRING(CAST(Environment.Pagos[intInd].COD_RESPUESTA AS CHARACTER) FROM 1 FOR 3) ='000') THEN
								SET intCantAprv = intCantAprv + 1;
							ELSE
								SET intCantRech = intCantRech + 1;
							END IF;
		
							
							SET OutputLocalEnvironment.Destination.File.Directory 	= '/storage_ib/comercios_rpta/';
					SET OutputLocalEnvironment.Destination.File.Name 		= chrNomArchivo;		
							PROPAGATE TO TERMINAL 1 DELETE NONE;
						
				END WHILE;
	
				
			
				SET OutputRoot.MRM = NULL;
				
				
				
			 
			
		
			 
		
			
					SET OutputRoot.Properties.MessageSet 		= 'MS_ESB_BATCH_GENCARGOS';			
					SET OutputRoot.Properties.MessageType 		= 'MSJ_CABECERA_RES_FIN';	
					SET OutputRoot.Properties.MessageFormat 	= 'CWF';		
			
			
			CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MRM';	
			    
			CREATE FIELD OutputRoot.MRM.MENSAJE;
			DECLARE refIteme REFERENCE TO OutputRoot.MRM.MENSAJE;
							     
			SET refIteme.TIPOREGISTRO		= 'E';
			SET refIteme.FECHAPROCESO		= chrFecActual;
			SET refIteme.FILLER1			= '';
			SET refIteme.CODRESULTADO		= '';
			SET refIteme.FILLER2			= '';
			SET refIteme.MSJRESPUESTA		= '';
			SET refIteme.FILLER3			= '';
			
			SET OutputLocalEnvironment.Destination.File.Directory 	= '/storage_ib/comercios_rpta/';
			SET OutputLocalEnvironment.Destination.File.Name 		= chrNomArchivo;
			PROPAGATE TO TERMINAL 1;
		
		END IF;
	
		--((1)) Envio del cierre del archivo de cargos generado
		
	--	SET OutputRoot.Properties = InputProperties;

		SET OutputLocalEnvironment.Destination.File.Directory 	= '/storage_ib/comercios_rpta/';
			SET OutputLocalEnvironment.Destination.File.Name 		= chrNomArchivo;
		PROPAGATE TO TERMINAL 2;

		--((3)) Registro de Log del Proceso

		
		
		--((4)) Registro del archivo en la tabla de enlace
		
		DECLARE intIdArchivo INTEGER 0;
		CALL insertarArchivo(chrNomArchivo,
								getTIPO_FILE_ARCHIVO_COMERCIO(),
								CURRENT_TIMESTAMP,
								intIdArchivo);									
 									
									 
		--((5)) Registro del detalle del proceso por cada comercio.
 		  
		CALL insertarAutorizadorTransaccionComercio(516,
													85,
													intCantAprv,
													intCantRech,
													intCantAprv + intCantRech,
													intIdArchivo,
													intAutTraCom);
				
		RETURN FALSE;
		
	END;

 
CREATE PROCEDURE setearDestino(IN refParam REFERENCE,IN chrNomArchivo CHARACTER)
BEGIN
	
	SET OutputLocalEnvironment.Destination.File.Directory 	= refParam.Servicio.PATHFILEDEST;
	SET OutputLocalEnvironment.Destination.File.Name 		= chrNomArchivo;

END;

END MODULE;







  
CREATE COMPUTE MODULE MF_ESB_BTH_GENARCHIVO_ControlarError
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

	
		RETURN TRUE;
		
	END;

 
END MODULE;