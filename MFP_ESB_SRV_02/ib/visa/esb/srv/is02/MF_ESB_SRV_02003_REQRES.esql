/*
 *
 * Nombre		: MF_ESB_SRV_02003_REQRES.esql
 * Proposito	: Flujo especifico para el servicio 02003
 * Fecha		: 2014-03-28
 * Autores		: Ruben Mejia - Synopsis
 * Version		: 1.0
 * 
 *--------------------------------------------------------------------
 */ 
BROKER SCHEMA ib.visa.esb.srv.is02
PATH ib.visa.esb.core, ib.visa.esb.srv;

CREATE COMPUTE MODULE MF_ESB_SRV_02003_REQRES_AdecuarMensaje
	CREATE FUNCTION Main() RETURNS BOOLEAN
	
	BEGIN
 		
		--((1)) Se prepara el formato del mensaje de salida hacia la app proveedora
		CALL setearPropiedadesMensaje(OutputRoot,'','','');
		SET OutputRoot.Properties.Encoding			= InputProperties.Encoding; 
		SET OutputRoot.Properties.CodedCharSetId	= 1208;
		
		--((2)) Se copian las cabeceras
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.MQRFH2.usr = InputRoot.MQRFH2.usr;
		
		--((3)) Adecuacion de Cabecera MQMD
		CALL setearPropiedadesMQMD(OutputRoot.MQMD, InputRoot.MQMD,InputRoot.MQRFH2.usr.Parametros.Servicio);
		
		--((3.1)) Parseo del mensaje de entrada	
		CALL validateEsbXML(Environment,InputBody.BLOB,'MS_SRV_02003','esbXML');
		SET OutputRoot.MQRFH2.usr.JsonIn = Environment.XMLNSC;
		
		--(4) Validaciones
		--CALL validarCamposSolicitudAfiliacion(Environment,InputRoot.MQRFH2.usr);
		
		--(5) Se construye Mensaje Request que sera enviado a la app proveedora
		CALL buildSolicitudAfiliacion(Environment, OutputRoot);		
			
		--Guardado del mensaje de salida formateado para registrarlo en auditoria		
		SET Environment.XMLNSC = OutputRoot.XMLNSC;
		
		--((6)) Se indica la cola de salida del flujo generico
		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = obtenerColaEntradaFlujoSalida(InputRoot.MQRFH2.usr);

		PROPAGATE TO TERMINAL 1;
		
		--((7)) Se registra Auditoria
		CALL armarAuditoriaEventoFormateo(OutputRoot,
		InputRoot.MQMD.MsgId,
		InputRoot.MQRFH2.usr,
		Environment.XMLNSC,
		NULL,
		'',
		'',
		'',
		'',
		'',
		'',
		'',
		'',
		'',
		'');

		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = getCOLA_ENTRADA_FLUJO_AUDITORIA();

		PROPAGATE TO TERMINAL 2;
		RETURN FALSE;
	END;
			
END MODULE;
		
CREATE COMPUTE MODULE MF_ESB_SRV_02003_REQRES_PrepararRespuesta
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		--((1)) Se copian las cabeceras
		SET OutputRoot.MQMD = InputRoot.MQMD;
		SET OutputRoot.MQRFH2.usr.Parametros = InputRoot.MQRFH2.usr.Parametros;
		
		--((2)) Adecuacion de Cabecera MQMD
		CALL setearPropiedadesMQMD(OutputRoot.MQMD, InputRoot.MQMD,InputRoot.MQRFH2.usr.Parametros.Servicio);	
				
		--((3)) Preparacion del mensaje Soap de respuesta generica
		DECLARE chrSrv CHARACTER getNS_VISA(); 
		DECLARE chrSoap CHARACTER getNS_SOAP();
		DECLARE nsSrv NAMESPACE chrSrv;  
		DECLARE nsSoap NAMESPACE chrSoap;
		
		DECLARE refInput REFERENCE TO InputRoot.XMLNSC.nsSoap:Envelope.nsSoap:Body.nsSrv:SolicitarAfiliacionResponse;
		DECLARE refOut REFERENCE TO OutputRoot;
		
		DECLARE refData REFERENCE TO refInput.nsSrv:Detalle.nsSrv:Afiliacion; 
		DECLARE refCabIn REFERENCE TO InputRoot.MQRFH2.usr.JsonIn.esbXML.Header.HeaderRequest;--Cabecera del Json Request
		
		DECLARE codigo CHARACTER COALESCE(refInput.nsSrv:Cabecera.nsSrv:Codigo, InputRoot.MQRFH2.usr.ResultadoInvocacion.codigoRespuesta); 
		DECLARE isExito BOOLEAN CAST(COALESCE(refInput.nsSrv:Cabecera.nsSrv:Exito, FALSE) AS BOOLEAN);		
		DECLARE descMensaje CHARACTER COALESCE(refInput.nsSrv:Cabecera.nsSrv:Descripcion, InputRoot.MQRFH2.usr.ResultadoInvocacion.descripcion);
		
		--Construyendo la cabecera de respuesta
		CALL buildHeaderResponse(refOut, refCabIn, isExito, codigo,descMensaje); 
		CALL buildBodyResponse(refOut, refData, 'ComercioSolicitudAfiliacionResponse', isExito, chrSrv); 			
		
		--((5))Guardado del mensaje de salida formateado para registrarlo en auditoria
		CREATE LASTCHILD OF Environment DOMAIN 'XMLNSC';
		SET Environment.XMLNSC = OutputRoot.JSON.Data;
	
        --((6))Se asigna la cola generica de respuesta del protocolo
		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = obtenerColaEntradaProtocoloRespuesta(InputRoot.MQRFH2.usr);
		PROPAGATE TO TERMINAL 1;
		
		--((7)) Se registra Auditoria
		CALL armarAuditoriaEventoRespuestaConsumidor(OutputRoot,
							InputRoot.MQMD.MsgId,
							InputRoot.MQRFH2.usr,
							Environment.XMLNSC,
							NULL); 
 
		SET OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = getCOLA_ENTRADA_FLUJO_AUDITORIA();
		PROPAGATE TO TERMINAL 2;

		RETURN FALSE;	
	END;
END MODULE;

