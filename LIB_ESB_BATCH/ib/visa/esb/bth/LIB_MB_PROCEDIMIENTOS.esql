/*
 *
 * Nombre		: LIB_MB_PROCEDIMIENTOS.esql
 * Proposito	: Procedimientos y funciones genericas de ayuda para los flujos
 * Fecha		: 2014-06-17
 * Autores		: Ruben Mejia - Synopsis
 * Version		: 1.0
 * 
 *--------------------------------------------------------------------
 */
 
BROKER SCHEMA ib.visa.esb.bth



/*
 * Obtiene el nro de horario y cola de proceso para determinado horario
*/ 

CREATE PROCEDURE calcularProcesoPorHorario(IN chrIdentProceso CHARACTER, 
											   IN chrHorario1 CHARACTER, 
											   IN chrHorario2 CHARACTER, 
											   INOUT chrCola CHARACTER, 
											   INOUT chrNroHorario CHARACTER) 
		
BEGIN
	DECLARE chrHoraIni1 CHARACTER '';
	DECLARE intHoras1 INTEGER;
	DECLARE tmsHorarioIni1,tmsHorarioFin1 TIMESTAMP;
	
	SET chrHoraIni1 = TRIM(SUBSTRING(chrHorario1 BEFORE '-'));
	SET intHoras1   = CAST(TRIM(SUBSTRING(chrHorario1 AFTER '-')) AS INTEGER);
	
	SET tmsHorarioIni1 = obtenerTimeStampConcatenadoConHora(chrHoraIni1);
	SET tmsHorarioFin1 = tmsHorarioIni1 + CAST(intHoras1 AS INTERVAL HOUR);
	
	IF (CURRENT_TIMESTAMP > tmsHorarioIni1 AND CURRENT_TIMESTAMP < tmsHorarioFin1) THEN
		SET chrCola = 'IB.BTH.'  || chrIdentProceso || '.REGARCHIVO.REQ.01';
		SET chrNroHorario = '1';
	ELSE
		SET chrCola = 'IB.BTH.'  || chrIdentProceso || '.REGARCHIVO.REQ.02';
		SET chrNroHorario = '2';
	END IF;

END;

/*
 * Crea a partir de una lista nombres de campos
*/
CREATE PROCEDURE crearNombreCampos(IN refCampo REFERENCE,IN refSalida REFERENCE) 
BEGIN
				
		WHILE LASTMOVE(refCampo)=TRUE 
		DO
			CREATE LASTCHILD OF refSalida NAME refCampo.CODIGO_ATRIBUTO VALUE refCampo.VALOR;
			
		   	MOVE refCampo NEXTSIBLING;
		END WHILE;
				
END;

 
/*
 * Setea el formato del mensaje 
*/
CREATE PROCEDURE setearPropiedadesMensaje(IN refOutputRoot REFERENCE,IN chrMessageSetName CHARACTER, IN chrMessageType CHARACTER, IN chrMessageFormat CHARACTER)
BEGIN
	
	SET refOutputRoot.Properties.MessageSet 	= chrMessageSetName;			
	SET refOutputRoot.Properties.MessageType 	= chrMessageType;	
	SET refOutputRoot.Properties.MessageFormat 	= chrMessageFormat;	
END;

 

/*
 * Prepara el mensaje para registrar el Log de Proceso
 *
*/
CREATE PROCEDURE armarMensajeLogProceso(IN refOutput REFERENCE,
									IN intIdProceso CHARACTER,
									IN intIdInstanciaProceso CHARACTER, 
									IN intTipoLog INTEGER,
									IN chrNomComponente CHARACTER,
									IN chrDescMensaje CHARACTER)
BEGIN 

		CALL setearPropiedadesMensaje(refOutput,'MS_ESB_BATCH_GENERICO','MSJ_LOGPROCESO','XML1');
		--CREATE LASTCHILD OF refOutput DOMAIN 'MQMD';
		--SET refOutput.MQMD.Persistence = 1;
		CREATE LASTCHILD OF refOutput DOMAIN 'XMLNSC';
		CREATE FIELD refOutput.XMLNSC.MENSAJE;
		DECLARE refA REFERENCE TO refOutput.XMLNSC.MENSAJE;
		SET refA.IDPROCESO 			= intIdProceso;
		SET refA.IDINSTANCIAPROCESO	= intIdInstanciaProceso; 
		SET refA.FECMENSAJE			= CAST(CURRENT_TIMESTAMP AS CHAR FORMAT 'yyyy-MM-dd HH:mm:ss.SSSSSS');
		SET refA.TIPOLOG			= intTipoLog;
		SET refA.NOMCOMPONENTE		= chrNomComponente;
		SET refA.DESCMENSAJE		= chrDescMensaje;
				
END;




/*
 * Procedimiento que obtiene la el detalle completo de un exceptionList
*/
CREATE PROCEDURE obtenerDetalleError(IN InputTree REFERENCE, OUT messageNumber CHARACTER, OUT messageText CHARACTER)
	BEGIN
	-- Crea una referencia del "first child" del "ExceptionList"
	DECLARE ptrException REFERENCE TO InputTree.*[1];
	DECLARE numInserts INTEGER 0;
	DECLARE intInsert INTEGER 1;	    
	-- keep looping while the moves to the child of exception list work
	WHILE LASTMOVE(ptrException) DO
		-- store the current values for the error number and text
		IF ptrException.Number IS NOT NULL THEN
			SET intInsert = 1;
			SET messageNumber = CAST(ptrException.Number AS CHARACTER);
			SET messageText = ptrException.Text;
			SET numInserts = CARDINALITY(ptrException.Insert[]);	    		

			IF numInserts > 0 THEN	    			

				SET messageText = messageText || '(';	    			

				WHILE intInsert <= numInserts DO
					SET messageText = messageText || ptrException.Insert[intInsert].Text;	    				

					IF intInsert <> numInserts THEN
						SET messageText = messageText || ', ';
					END IF;	    				

					SET intInsert = intInsert + 1;
				END WHILE;	    			

				SET messageText = messageText || ')';
			END IF;
		END IF;			
		-- now move to the last child which should be the next exceptionlist
		MOVE ptrException LASTCHILD;
	END WHILE;
END;
	





/*
 * Prepara el mensaje para el correo de alertas de los procesos
*/
CREATE PROCEDURE prepararMensajeCorreoAlerta(IN refOut REFERENCE,IN chrTipoAlerta CHARACTER,IN refOutParam REFERENCE,IN chrMsjError CHARACTER, IN chrFlujoError CHARACTER)
BEGIN

	DECLARE chrTo, chrCc, chrBody, chrIdTran CHARACTER '';
	DECLARE chrDestinos CHARACTER  COALESCE(refOutParam.Servicio.CORREO,refOutParam.ESB.CORREO);
	DECLARE intPosicion INTEGER POSITION(',' IN chrDestinos);
	
	SET chrIdTran = CAST(COALESCE(refOutParam.Batch.idTransaccion,'') AS CHARACTER);
	IF intPosicion > 0 THEN
		SET chrTo = SUBSTRING(chrDestinos FROM 1 FOR intPosicion-1);
		SET chrCc = SUBSTRING(chrDestinos FROM intPosicion+1 FOR LENGTH(chrDestinos)-intPosicion);
	ELSE
		SET chrTo = chrDestinos;
		SET chrCc = '';
	END IF;
	SET refOut.Properties.MessageFormat 	= 'XML';
	SET refOut.MQMD.Format 	= 'XML';			
	CREATE LASTCHILD OF refOut DOMAIN 'XMLNSC';

	SET refOut.XMLNSC.Email.Header.From 	= refOutParam.ESB.REMITENTE;	
	SET refOut.XMLNSC.Email.Header.To		= chrTo;
	SET refOut.XMLNSC.Email.Header.Cc		= chrCc;
	
	SET chrBody =  			 '<TR><TD>Codigo Proceso:</TD><TD>'|| refOutParam.General.CODIGO ||'</TD></TR>';
	SET chrBody = chrBody || '<TR><TD>Identificador:</TD><TD>'|| refOutParam.General.IDENTIFICADOR ||'</TD></TR>';
	SET chrBody = chrBody || '<TR><TD>Nombre Proceso:</TD><TD>'|| refOutParam.General.NOMBRE ||'</TD></TR>';
	IF (chrIdTran<>'') THEN	
		SET chrBody = chrBody || '<TR><TD>Id Transaccion:</TD><TD>'|| chrIdTran||'</TD></TR>';
	END IF;
	SET chrBody = chrBody || '<TR><TD>Fecha Proceso:</TD><TD>'|| refOutParam.Batch.fechaInicioProceso ||'</TD></TR>';
	SET chrBody = chrBody || '<TR><TD>Hora Inicio:</TD><TD>'|| refOutParam.Batch.horaInicioProceso ||'</TD></TR>';
	IF (FIELDNAME(refOutParam.Batch.horaFinProceso) IS NOT NULL) THEN
		SET chrBody = chrBody || '<TR><TD>Hora Fin:</TD><TD>'|| refOutParam.Batch.horaFinProceso ||'</TD></TR>';
	END IF;	
	IF (FIELDNAME(refOutParam.Batch.nombreArchivo) IS NOT NULL) THEN
		SET chrBody = chrBody || '<TR><TD>Archivo cargado:</TD><TD><B>'|| refOutParam.Batch.nombreArchivo ||'<B></TD></TR>';
	END IF;
			
	SET chrBody = chrBody || '<TR><TD>BUS:</TD><TD>'|| BrokerName ||'</TD></TR>';
	
	
	IF (chrTipoAlerta = getTIPO_ALERTA_1()) THEN --inicio de un proceso
		SET refOut.XMLNSC.Email.Header.Subject	= 'Batch: Inicio proceso ' || refOutParam.General.IDENTIFICADOR;		
	ELSEIF (chrTipoAlerta = getTIPO_ALERTA_2()) THEN --Finalizacion de un proceso
		SET refOut.XMLNSC.Email.Header.Subject	= 'Batch: Fin proceso ' || refOutParam.General.IDENTIFICADOR ;
	ELSEIF (chrTipoAlerta = getTIPO_ALERTA_3()) THEN --Demora en finalizacion
		SET refOut.XMLNSC.Email.Header.Subject	= 'Batch: Alerta demora proceso ' || refOutParam.General.IDENTIFICADOR;
		SET chrBody = chrBody || '<TR><TD>Detalle:</TD><TD><FONT COLOR=RED>El proceso inicio a las ' || refOutParam.Batch.horaInicioProceso;
		SET chrBody = chrBody || ' y debio de haber terminado en ' || refOutParam.Servicio.MINESTPROC || ' minutos, pero aun no termina</FONT></TD></TR>';
	ELSEIF (chrTipoAlerta = getTIPO_ALERTA_4()) THEN --Error en el proceso 
		SET refOut.XMLNSC.Email.Header.Subject	= 'Batch: Problema en proceso ' || refOutParam.General.IDENTIFICADOR ;
		SET chrBody = chrBody || '<TR><TD>Flujo de proceso:</TD><TD><B>'|| chrFlujoError ||'<B></TD></TR>';
		SET chrBody = chrBody || '<TR><TD>Descripcion del error:</TD><TD><FONT COLOR=RED>'|| chrMsjError ||'</FONT></TD></TR>';
	ELSEIF (chrTipoAlerta = getTIPO_ALERTA_5()) THEN --Error en el proceso de archivo lotes
		SET refOut.XMLNSC.Email.Header.Subject	= 'Batch: Problema en proceso ' || refOutParam.General.IDENTIFICADOR || ' - Error en Archivo Lotes.';
		SET chrBody = chrBody || '<TR><TD>Descripcion del error:</TD><TD><FONT COLOR=RED>'|| chrMsjError ||'</FONT></TD></TR>';				 	
	END IF;
	
	IF (chrIdTran<>'') THEN	
		SET refOut.XMLNSC.Email.Header.Subject	= refOut.XMLNSC.Email.Header.Subject || ' (' || chrIdTran || ')';
	END IF; 
	
	SET chrBody =  '<HTML><BODY><TABLE BORDER = 2 CELLSPACING = 2 >' || chrBody || '</TABLE></BODY></HTML>';
	SET refOut.XMLNSC.Email.Body = chrBody;
END;


/*
 * Prepara el mensaje para el correo de alertas de los procesos
*/
CREATE PROCEDURE prepararMensajeCorreoNotificar(IN refOut REFERENCE,
												IN chrRemitente CHARACTER,
												IN refOutParam REFERENCE)
BEGIN
	
	DECLARE  chrBody CHARACTER '';
	
	SET refOut.Properties.MessageFormat = 'XML';
	SET refOut.MQMD.Format 				= 'XML';			
	CREATE LASTCHILD OF refOut DOMAIN 'XMLNSC';
	
	/*SET chrBody =  			 '<p><span lang="ES">Estimado Cliente: <strong>' || COALESCE(refOutParam.NOM_TARJETAHABIENTE,'') || ' ' || COALESCE(refOutParam.APE_PATERNO_TARJETAHABIENTE,'') ||'</strong></span></p>';
	SET chrBody = chrBody || '<p><span lang="ES"> <br /> Su afiliaci&oacute;n al comercio <strong>' || COALESCE(refOutParam.NOM_COMERCIAL,'') || '</strong>';
	SET chrBody = chrBody || '&nbsp;para el producto <strong>' || COALESCE(refOutParam.NOM_PRODUCTO,'') || '</strong> se encuentra por expirar.</span></p>';
	SET chrBody = chrBody || '<p><span lang="ES">Fecha desafiliaci&oacute;n: <strong>' || COALESCE(refOutParam.FECHA_DESAFILIACION,'') || '</strong></span></p>';
	SET chrBody = chrBody || '<p><span lang="ES">Para cualquier consulta por favor comunicarse con el comercio al tel&eacute;fono: <strong>' || COALESCE(refOutParam.NRO_TELEFONO,'') || '</strong></span></p>';
	*/
	--Req-9 1709
--	SET chrBody =  			 '<p><span lang="ES">Estimado(a) Sr(a).:</span></p>';
--	SET chrBody = chrBody || '<p><span lang="ES"> <br /> Le remitimos este mensaje por encargo de ' || COALESCE(refOutParam.NOM_COMERCIAL,'') || '';
--	SET chrBody = chrBody || ' para informarle que su registro al Sistema de Pagos Recurrentes en '|| COALESCE(refOutParam.NOM_COMERCIAL,'') || ' ';
--	SET chrBody = chrBody || 'para el producto ' || COALESCE(refOutParam.COD_PRODUCTO,'') || ' vencer&aacute; en la siguiente fecha: '|| COALESCE(refOutParam.FECHA_DESAFILIACION,'') || '</span></p>';
--	SET chrBody = chrBody || '<p><span lang="ES">Para cualquier consulta por favor comunicarse con el dicho establecimiento al n&uacute;mero: ' || COALESCE(refOutParam.NRO_TELEFONO,'') || '</span></p>';
--	SET chrBody = chrBody || '<p>Atentamente</p><p>VisaNet Per&uacute;</p>';
--	SET chrBody = chrBody || '<p>"Este mensaje es autom&aacute;tico por lo que no admite respuesta; si ya lo recibi&oacute; anteriormente, por favor s&iacute;rvase ignorarlo. '
--						|| 'El env&iacute;o de este correo no debe ser considerado como constitutivo de una relaci&oacute;n comercial o de consumo, ni de ninguna otra &iacute;ndole entre el remitente y el destinatario, por lo que no genera para el remitente obligaci&oacute;n alguna respecto del destinatario. '
--						|| '<b>En ese sentido, para cualquier consulta, tr&aacute;mite o reclamaci&oacute;n sobre este cargo o sobre los productos o servicios adquiridos, deber&aacute; dirigirse al Establecimiento.</b> "</p>';
--	
--	
	SET chrBody =  			 '<p>' || COALESCE(refOutParam.CUERPO,'') ||'</p>';
	SET chrBody = REPLACE(chrBody,'@COMERCIO',COALESCE(refOutParam.NOM_COMERCIAL,''));
	SET chrBody = REPLACE(chrBody,'@FECHA',COALESCE(CAST(refOutParam.FECHA_DESAFILIACION AS CHARACTER FORMAT getFORMATO_FECHA4()),''));
	SET chrBody = REPLACE(chrBody,'@COD_PRODUCTO',COALESCE(refOutParam.COD_PRODUCTO,''));
	SET chrBody = REPLACE(chrBody,'@TELEFONO',COALESCE(refOutParam.NRO_TELEFONO,''));
	--
	SET refOut.XMLNSC.Email.Header.From 	= chrRemitente;
	SET refOut.XMLNSC.Email.Header.To	 	= refOutParam.EMAIL_TARJETAHABIENTE;
	SET refOut.XMLNSC.Email.Header.Subject	= refOutParam.ASUNTO;
	SET refOut.XMLNSC.Email.Body 			= chrBody;
END;	


/*
 * Prepara el mensaje para el correo de alertas de los procesos
*/
CREATE PROCEDURE prepararMensajeCorreoNotificarOtros(IN refOut REFERENCE,
													 IN chrRemitente CHARACTER,
													 IN refOutParam REFERENCE)
BEGIN
	
	DECLARE  chrBody CHARACTER '';
	
	SET refOut.Properties.MessageFormat = 'XML';
	SET refOut.MQMD.Format 				= 'XML';
						
	CREATE LASTCHILD OF refOut DOMAIN 'XMLNSC';
	
	SET chrBody =  			 '<p><span lang="ES">Estimado Comercio: <strong>' || COALESCE(refOutParam.NOM_CONTACTO_ADMINISTRATIVO,'') || '</strong></span></p>';
	SET chrBody = chrBody || '<p><span lang="ES"> <br /> <strong>' || COALESCE(CAST(refOutParam.AFILIACIONES AS CHAR),'') || '</strong> Afiliaciones expirar&aacute;n en la fecha :&nbsp;';
	SET chrBody = chrBody || '<strong>' || COALESCE(refOutParam.FECHA_DESAFILIACION,'') || '</strong></span></p>';
	
	SET refOut.XMLNSC.Email.Header.From 	= chrRemitente;
	SET refOut.XMLNSC.Email.Header.To	 	= refOutParam.EMAIL_CONTACTO_ADMINISTRATIVO;
	SET refOut.XMLNSC.Email.Header.Subject	= refOutParam.ASUNTO;
	SET refOut.XMLNSC.Email.Body 			= chrBody;
END;

/*
 * Prepara el mensaje para el correo de alertas de los procesos
*/
CREATE PROCEDURE prepararMensajeCorreoNotificarCargos(IN refOut REFERENCE,
													  IN chrRemitente CHARACTER,
													  IN refOutParam REFERENCE)
BEGIN
	
	DECLARE  chrBody CHARACTER '';
	
	SET refOut.Properties.MessageFormat = 'XML';
	SET refOut.MQMD.Format 				= 'XML';			
	CREATE LASTCHILD OF refOut DOMAIN 'XMLNSC';
	
	SET chrBody =  			 '<p>' || COALESCE(refOutParam.CUERPO,'') ||'</p>';
	SET chrBody = REPLACE(chrBody,'@NOMBRES',COALESCE(refOutParam.NOM_TARJETAHABIENTE,''));
	SET chrBody = REPLACE(chrBody,'@FECHA',COALESCE(CAST(refOutParam.FEC_PROCESO_PAGO AS CHARACTER FORMAT getFORMATO_FECHA4()),''));
	SET chrBody = REPLACE(chrBody,'@IMPORTE',COALESCE(CAST(refOutParam.MTO_CARGO AS CHARACTER),''));
	SET chrBody = REPLACE(chrBody,'@COMERCIO',COALESCE(refOutParam.NOM_COMERCIAL,''));
	SET chrBody = REPLACE(chrBody,'@MONEDA',COALESCE(refOutParam.MONEDA,''));--Req-9 1709
	
	
	SET refOut.XMLNSC.Email.Header.From 	= chrRemitente;
	SET refOut.XMLNSC.Email.Header.To	 	= refOutParam.EMAIL_TARJETAHABIENTE;
	SET refOut.XMLNSC.Email.Header.Subject	= refOutParam.ASUNTO;
	SET refOut.XMLNSC.Email.Body 			= chrBody;
	
END;


/*
 * Prepara el mensaje para el correo de cobros autorizados
*/
CREATE PROCEDURE prepararMensajeCorreoCargoAutorizado(IN refOut REFERENCE,
													 IN chrRemitente CHARACTER,
													 IN refOutParam REFERENCE)
BEGIN
	
	DECLARE  chrBody CHARACTER '';
	
	SET refOut.Properties.MessageFormat = 'XML';
	SET refOut.MQMD.Format 				= 'XML';	
	--SET refOut.Properties.CodedCharSetId = 819;
	--SET refOut.Properties.Encoding = 273; --0309
				
	CREATE LASTCHILD OF refOut DOMAIN 'XMLNSC';
	
--	SET chrBody =  			 '<p><span lang="ES">Estimado Afiliado: <strong>' || COALESCE(refOutParam.NOM_TARJETAHABIENTE,'')  || ' ' || COALESCE(refOutParam.APE_PATERNO_TARJETAHABIENTE,'') || '</strong></span></p>';
--	SET chrBody = chrBody || '<p><span lang="ES"> <br /> Se realizó el cobro de' || COALESCE(CAST(refOutParam.MTO_CARGO AS CHARACTER),'') || ' a su tarjeta de crédito';

--cambio 1808-11
--	SET chrBody =  			 '<p><span lang="ES">Estimado Afiliado: <strong>' || COALESCE(refOutParam.NOM_TARJETAHABIENTE,'')  || ' ' || COALESCE(refOutParam.APE_PATERNO_TARJETAHABIENTE,'') || '</strong></span></p>';
--	SET chrBody = chrBody || '<p><span lang="ES"> <br /> El cargo por ' || COALESCE(CAST(refOutParam.MTO_CARGO AS CHARACTER),'') || ' enviado el ' || COALESCE(CAST(refOutParam.FEC_PROCESO_PAGO AS CHARACTER FORMAT getFORMATO_FECHA4()),'') || ' de acuerdo al servicio contratado con la empresa '
--					|| COALESCE(CAST(refOutParam.NOM_COMERCIAL AS CHARACTER),'') || ' fue ' || COALESCE(CAST(refOutParam.ESTADO_CARGO AS CHARACTER),'') ||
--					'<p> Atentamente </p> <p>Visanet</p>';   
	
	SET chrBody =  			 '<p><span lang="ES">Estimado(a) Sr.(a): </span></p>';
	SET chrBody = chrBody || '<p><span lang="ES"> <br /> Le remitimos este mensaje por encargo de ' || COALESCE(CAST(refOutParam.NOM_COMERCIAL AS CHARACTER),'') 
						  || ', para informarle que se ejecuto satisfactoriamente el cargo a su Tarjeta Visa, de acuerdo con su afiliacion al Sistema de Pagos Recurrentes por '
						  || COALESCE(CAST(refOutParam.MTO_CARGO AS CHARACTER),'') || ' '|| COALESCE(CAST(refOutParam.MONEDA AS CHARACTER),'') ||
						  '<p> Atentamente, VisaNet Peru </p>'||
						  '<p>Este mensaje es automatico por lo que no admite respuesta; si ya lo recibio anteriormente por favor sirvase ignorarlo. El envio de este correo no debe ser considerado como constitutivo de una relacion comercial o de consumo, ni de ninguna otra indole entre el remitente y el destinatario, por lo que no genera para el remitente obligacion alguna respecto del destinatario. <strong>En ese sentido, para cualquier consulta, tramite o reclamacion sobre este cargo o sobre los productos o servicios adquiridos, debera dirigirse al Establecimiento.</strong></p>'||
						  '<p>El sistema desde el cual ha sido enviado este mensaje no admite caracteres como tildes o dieresis.</p>';   
	
	SET refOut.XMLNSC.Email.Header.From 	= chrRemitente;
	SET refOut.XMLNSC.Email.Header.To	 	= refOutParam.EMAIL_TARJETAHABIENTE;
	SET refOut.XMLNSC.Email.Header.Subject	= 'Visanet - Cobro Autorizado';
	SET refOut.XMLNSC.Email.Body 			= chrBody;
END;


/*
 * Synopsis: RMQ - Nuevo para CE
 * Prepara el mensaje para el correo de finalizacion de carga de archivos de cargos del tipo de canal "CE" (Comercios Electronicos)
*/
CREATE PROCEDURE prepararMensajeCorreoNotificacionCargosCE(IN refOut REFERENCE,IN refOutParam REFERENCE,IN intRegistrosFail INTEGER, IN intRegistrosTotal INTEGER, IN estadoProcesoImp INTEGER)
BEGIN
	
	DECLARE chrTo, chrCc, chrBody, chrIdTran CHARACTER '';
	DECLARE chrDestinos CHARACTER  refOutParam.Batch.Metadata.correoAdmComercio;
	DECLARE intPosicion INTEGER POSITION(',' IN chrDestinos);
	
	SET chrIdTran = CAST(COALESCE(refOutParam.Batch.idTransaccion,'') AS CHARACTER);
	IF intPosicion > 0 THEN
		SET chrTo = SUBSTRING(chrDestinos FROM 1 FOR intPosicion-1);
		SET chrCc = SUBSTRING(chrDestinos FROM intPosicion+1 FOR LENGTH(chrDestinos)-intPosicion);
	ELSE
		SET chrTo = chrDestinos;
		SET chrCc = '';
	END IF;
	SET refOut.Properties.MessageFormat 	= 'XML';
	SET refOut.MQMD.Format 	= 'XML';			
	CREATE LASTCHILD OF refOut DOMAIN 'XMLNSC';

	SET refOut.XMLNSC.Email.Header.From 	= refOutParam.ESB.REMITENTE;	
	SET refOut.XMLNSC.Email.Header.To		= chrTo;
	SET refOut.XMLNSC.Email.Header.Cc		= chrCc;
	
	IF (chrIdTran<>'') THEN	
		SET chrBody = chrBody || '<TR><TD>Id Transaccion:</TD><TD>'|| chrIdTran||'</TD></TR>';
	END IF;
	SET chrBody = chrBody || '<TR><TD>Fecha Proceso:</TD><TD>'|| refOutParam.Batch.fechaInicioProceso ||'</TD></TR>';
	SET chrBody = chrBody || '<TR><TD>Hora Inicio:</TD><TD>'|| refOutParam.Batch.horaInicioProceso ||'</TD></TR>';
	IF (FIELDNAME(refOutParam.Batch.horaFinProceso) IS NOT NULL) THEN
		SET chrBody = chrBody || '<TR><TD>Hora Fin:</TD><TD>'|| refOutParam.Batch.horaFinProceso ||'</TD></TR>';
	END IF;	

	IF (refOutParam.Batch.Metadata.tipoCanal = 'CE') THEN --Comercio Electronico
		SET chrBody = chrBody || '<TR><TD>SFTP:</TD><TD><B>'|| refOutParam.Batch.Metadata.ipCreacion ||'<B></TD></TR>';
		SET chrBody = chrBody || '<TR><TD>Archivo comercio:</TD><TD><B>'|| refOutParam.Batch.Metadata.rutaArchivo ||'<B></TD></TR>';
		SET chrBody = chrBody || '<TR><TD>Archivo log:</TD><TD><B>'|| refOutParam.Batch.Metadata.rutaOutLog || refOutParam.Batch.Metadata.fileOutLog ||'<B></TD></TR>';
		--SET chrBody = chrBody || '<TR><TD>Cantidad registros:</TD><TD><B>'|| CAST(intRegistrosTotal AS CHARACTER) ||'<B></TD></TR>';
		--SET chrBody = chrBody || '<TR><TD>Registros fallidos:</TD><TD><B>'|| CAST(intRegistrosFail AS CHARACTER) ||'<B></TD></TR>';
		--SET chrBody = chrBody || '<TR><TD>Estado proceso:</TD><TD><B>'|| getESTADO_IMPORTACION(estadoProcesoImp) ||'<B></TD></TR>';
		
	END IF;
		
	SET refOut.XMLNSC.Email.Header.Subject	= 'Visanet - Archivo de Cargo ' || ' (Proceso:' || chrIdTran || ')';	
	
	SET chrBody =  '<HTML><BODY><TABLE BORDER = 2 CELLSPACING = 2 >' || chrBody || '</TABLE></BODY></HTML>';
	SET refOut.XMLNSC.Email.Body = chrBody;
	
END;