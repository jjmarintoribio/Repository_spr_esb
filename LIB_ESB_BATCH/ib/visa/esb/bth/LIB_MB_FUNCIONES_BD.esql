/*
 *
 * Nombre		: LIB_MB_FUNCIONES_BD.esql
 * Proposito	: Procedimientos para el acceso a la BD de los flujos del ESB
 * Fecha		: 2014-06-17
 * Autores		: Ruben Mejia - Synopsis
 * Version	: 1.0
 * 
 *--------------------------------------------------------------------
 */


BROKER SCHEMA ib.visa.esb.bth


	/* 
	 * Obtener Servicios del ESB
 	*/ 

	CREATE PROCEDURE obtenerServiciosBD(	
					IN I_TIPO CHARACTER
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "ESBDB.SP_OBTENER_SERVICIOS";  	

	/*
	 * Obtener Parametros de los servicios del ESB
 	*/   

	CREATE PROCEDURE obtenerParametrosBD(	
					IN I_TIPO CHARACTER
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "ESBDB.SP_OBTENER_PARAMETROS";  	

	/*
	 * Obtener Parametros de los servicios del ESB
 	*/   

	CREATE PROCEDURE obtenerParametrosServicioBD(	
					IN P_CODIGO_SERVICIO CHARACTER, 
				    IN P_CODIGO_ATRIBUTO_LIST_IN CHARACTER
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "ESBDB.SP_OBTENER_PARAMETROS_SERVICIO";  
  	
	/*
	 * Obtener Parametros de Seguridad del ESB
 	*/   

	CREATE PROCEDURE obtenerParametrosSeguridadBD(	
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "ESBDB.SP_OBTENER_PARAMETROS_SEGURIDAD";  	


	/*
	 * Procedimiento para registrar los logs de los procesos
 	*/ 

	CREATE PROCEDURE insertarLogProcesoBD(	
					IN I_ID_PROCESO INTEGER,
					IN I_ID_INSTANCIA_PROCESO INTEGER,
					IN I_FECHA_MENSAJE TIMESTAMP,
					IN I_TIPO_LOG INTEGER,
					IN I_NOM_COMPONENTE CHARACTER,
					IN I_DESC_MENSAJE  CHARACTER,
					OUT I_LOG_PROCESO  INTEGER
					)
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_LOG_PROCESO_INSERTAR";  	

 

	/*
	 * Procedimiento para registrar las instancias del proceso de generacion de cargos
 	*/ 

	CREATE PROCEDURE insertarProcesoAutorizadorTransaccionBD(	
					IN I_ID_PROCESO INTEGER,
					IN I_FEC_INICIO_GENERACION TIMESTAMP,
					IN I_NOM_ARCHIVO_GENERACION CHARACTER,
					IN I_FEC_INICIO_RECEPCION TIMESTAMP,
					IN I_NOM_ARCHIVO_RECEPCION CHARACTER,
					IN I_EST_PROCESO INTEGER,
					IN I_FEC_MODIFICACION TIMESTAMP,
					OUT O_ID_PROCESO_AUTORIZADOR_TRANSACCION  INTEGER
					)
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_PROCESO_AUTORIZADOR_TRANSACCION_INSERTAR";  	


	/*
	 * Registra el detalle de un archivo de comercio generado
 	*/ 
 
	CREATE PROCEDURE insertarAutorizadorTransaccionComercio(
					IN I_ID_PROCESO_AUTORIZADOR_TRANSACCION INTEGER,
					IN I_ID_COMERCIO INTEGER,
					IN I_CTD_TRANSACCIONES_APROBADAS INTEGER,
					IN I_CTD_TRANSACCIONES_RECHAZADAS INTEGER, 
					IN I_CTD_TOTAL_TRANSACCIONES INTEGER,
					IN I_ID_ARCHIVO_RESPUESTA_COMERCIO INTEGER,
					OUT O_ID_AUTORIZADOR_TRANSACCION_COMERCIO INTEGER 
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_AUTORIZADOR_TRANSACCION_COMERCIO_INSERTAR";  
 	
	/*
	 * Actualizar los estados de los cargos que tienen importe 0
 	*/ 
 
	CREATE PROCEDURE actualizarEstadosCargosImporteCero(
					IN I_FECHA_PROCESO_PAGO TIMESTAMP					
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_PROCESO_ACTUALIZAR_ESTADO_CARGOS";  


	/*
	 * Procedimiento para actualizar las instancias del proceso de generacion de cargos
 	*/ 	 
 	
	CREATE PROCEDURE actualizarProcesoAutorizadorTransaccionBD(	
					IN I_ID_PROCESO_AUTORIZADOR_TRANSACCION INTEGER,
					IN I_FEC_MODIFICACION TIMESTAMP,
					IN I_FEC_FIN_GENERACION TIMESTAMP,
					IN I_FEC_FIN_RECEPCION TIMESTAMP,
					IN NOM_ARCHIVO_GENERACION CHARACTER,
					IN NOM_ARCHIVO_RECEPCION CHARACTER,
					IN I_EST_PROCESO INTEGER
					)
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_PROCESO_AUTORIZADOR_TRANSACCION_ACTUALIZAR";  


	/*
	 * Procedimiento para registrar las instancias del proceso de actualizacion de tarjetas
 	*/ 

	CREATE PROCEDURE insertarProcesoActualizacionTarjetasBD(	
					IN I_ID_PROCESO INTEGER,
					IN I_FEC_INICIO_GENERACION TIMESTAMP,
					IN I_NOM_ARCHIVO_GENERACION CHARACTER,
					IN I_FEC_INICIO_REPCEPCION TIMESTAMP,
					IN I_NOM_ARCHIVO_RECEPCION CHARACTER,
					IN I_EST_PROCESO INTEGER,
					IN I_FEC_MODIFICACION TIMESTAMP,
					OUT O_ID_PROCESO_ACTUALIZACION_TARJETA  INTEGER
					)
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_PROCESO_ACTUALIZACION_TARJETA_INSERTAR";  	

	/*
	 * Ejecuta el volcado de los pagos temporales a la tabla pago
 	*/ 
   
	CREATE PROCEDURE insertarActualizacionTarjeta(
					IN I_ID_GRUPO CHARACTER)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_ACTUALIZACION_TARJETA_INSERTAR";  


	/*
	 * Procedimiento para actualizar las instancias del proceso de actualizacion de tarjetas
 	*/ 	 
 	
	CREATE PROCEDURE actualizarProcesoActualizacionTarjetasBD(	
					IN I_ID_PROCESO_ACTUALIZACION_TARJETA INTEGER,
					IN I_FEC_MODIFICACION TIMESTAMP,
					IN I_FEC_FIN_GENERACION TIMESTAMP,
					IN I_FEC_FIN_RECEPCION TIMESTAMP,
					IN I_EST_PROCESO INTEGER
					)
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_PROCESO_ACTUALIZACION_TARJETA_ACTUALIZAR";  

	/*
	* Procedimiento para registrar la transaccion de un proceso de mantenimiento
	*/
	CREATE PROCEDURE insertarProcesoMantenimiento(
					IN P_ID_PROCESO INTEGER,
					IN P_TIPO_PROCESO_MANTENIMIENTO INT,
					IN FEC_INICIO_PROCESO TIMESTAMP,
					IN FEC_FIN_PROCESO TIMESTAMP,
					OUT P_ID_PROCESO_MANTENIMIENTO INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_MANTENIMIENTO_INSERTAR";
	
	/*
	 * Procedimiento para registrar la transacción de un proceso de importación
	*/
	CREATE PROCEDURE insertarProcesoImportacion(IN P_ID_PROCESO INTEGER,
											 IN P_ID_COMERCIO INTEGER,
											 IN P_ID_EMISOR INTEGER,
											 IN P_FEC_INICIO_PROCESO TIMESTAMP,
											 IN P_FEC_FIN_PROCESO TIMESTAMP,
											 IN P_CTD_REGISTROS_EXITOSOS INTEGER,
											 IN P_CTD_REGISTROS_FALLIDOS INTEGER,
											 IN P_CTD_TOTAL_REGISTROS INTEGER,
											 IN P_TIPO_MODULO INT,
											 IN P_TIPO_IMPORTACION INT,
											 IN P_ID_ARCHIVO_IMPORTACION INTEGER,
											 IN P_ID_ARCHIVO_LOG INTEGER,
											 IN P_EST_PROCESO INT,
											 IN P_COD_USUARIO_CREACION CHARACTER,
											 IN P_IP_CREACION CHARACTER,
											 OUT P_ID_PROCESO_IMPORTACION INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_IMPORTACION_INSERTAR";
	
	
	/*
	 * Procedimiento para registrar la transacción de un proceso de migracion
	*/ 
	CREATE PROCEDURE insertarProcesoMigracion(IN P_ID_PROCESO INTEGER,
											 IN P_FEC_INICIO_PROCESO TIMESTAMP,
                                             IN P_FEC_FIN_PROCESO TIMESTAMP,
                                             IN P_CTD_REGISTROS_EXITOSOS INTEGER,
                                             IN P_CTD_REGISTROS_FALLIDOS INTEGER,
                                             IN P_CTD_TOTAL_REGISTROS INTEGER,
                                             IN P_TIPO_MIGRACION INT,
                                             IN P_ID_ARCHIVO_MIGRACION INTEGER,
                                             IN P_ID_ARCHIVO_LOG INTEGER,
                                             IN P_EST_PROCESO INT,
                                             IN P_COD_USUARIO_CREACION CHARACTER,
                                             IN P_IP_CREACION CHARACTER,
                                             OUT P_ID_PROCESO_MIGRACION INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_MIGRACION_INSERTAR";
	
			/*
	 * Procedimiento para registrar la transacción de un proceso de importación
	*/
	CREATE PROCEDURE actualizarProcesoMigracion(IN P_ID_PROCESO INTEGER,
											 IN P_FEC_FIN_PROCESO TIMESTAMP,
											 IN P_CTD_REGISTROS_EXITOSOS INTEGER,
											 IN P_CTD_REGISTROS_FALLIDOS INTEGER,
											 IN P_CTD_TOTAL_REGISTROS INTEGER,
											 IN P_EST_PROCESO INT,
											 IN P_ID_PROCESO_IMPORTACION INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_MIGRACION_ACTUALIZAR";
	
	CREATE PROCEDURE actualizarProcesoMigracionError(IN P_ID_PROCESO INTEGER,
											 IN P_FEC_FIN_PROCESO TIMESTAMP,
											 IN P_CTD_REGISTROS_EXITOSOS INTEGER,
											 IN P_CTD_REGISTROS_FALLIDOS INTEGER,
											 IN P_CTD_TOTAL_REGISTROS INTEGER,
											 IN P_EST_PROCESO INT,
											 IN P_ID_PROCESO_IMPORTACION INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_MIGRACION_ACTUALIZAR_ERROR";
	
			/*
	 * Procedimiento para registrar la transacción de un proceso de importación
	*/	
	CREATE PROCEDURE migrarAfiliacion(IN P_COD_COMERCIO CHARACTER,OUT P_FILAS INT)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.AFILIACION_MIGRAR";
	
		/*
	 * Procedimiento para registrar la transacción de un proceso de importación
	*/
	CREATE PROCEDURE actualizarProcesoImportacion(IN P_ID_PROCESO INTEGER,
											 IN P_FEC_FIN_PROCESO TIMESTAMP,
											 IN P_CTD_REGISTROS_EXITOSOS INTEGER,
											 IN P_CTD_REGISTROS_FALLIDOS INTEGER,
											 IN P_CTD_TOTAL_REGISTROS INTEGER,
											 IN P_EST_PROCESO INT,
											 IN P_ID_PROCESO_IMPORTACION INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_IMPORTACION_ACTUALIZAR";
	
	/*
	 * Obtiene Lotes - Paso1
 	*/ 

	CREATE PROCEDURE buscarLoteProcesoAutorizador(	
					IN I_FEC_INICIO_GENERACION TIMESTAMP
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_LOTE_BUSCAR_PROCESO_AUTORIZADOR";  
  	
  	/*
	 * Obtiene Lotes cantidad de cargos por Comercio - Paso2 
 	*/ 

	CREATE PROCEDURE buscarLoteComercio(	
					IN I_FEC_INICIO_GENERACION TIMESTAMP
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_LOTE_COMERCIO_BUSCAR";  
  	
  	
	CREATE PROCEDURE buscarLoteComercio2(	
					IN I_FEC_INICIO_GENERACION TIMESTAMP
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_LOTE_COMERCIO_BUSCAR_2";  
  	
  	  	/*
	 * Obtiene los cargos agrupados de la tabla temporal SPR.PAGO_MIGRACION_TEMPORAL
 	*/ 

	CREATE PROCEDURE buscarCargosMigracion()
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.CARGO_AGRUPAR_MIGRACION";
  	
  	/*
	 * Obtiene los cargos agrupados de la tabla temporal SPR.PAGO_MIGRACION_TEMPORAL
 	*/ 

	CREATE PROCEDURE buscarCargosMigracionTemporal(IN P_POSICION INT, IN P_CANTIDAD INT)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.CARGOS_MIGRACION_BUSCAR";  
  	
  	  	/*
	 * Obtiene los cargos agrupados de la tabla temporal SPR.PAGO_MIGRACION_TEMPORAL
	  IN P_COD_USUARIO VARCHAR(40), 
									  IN P_FECHA_SISTEMA TIMESTAMP,
									  IN P_IP_USUARIO VARCHAR(50),
									  IN P_ID_PROCESO_MIGRACION INTEGER,
									  IN P_POS_INI INT,
									  IN P_POS_FIN INT,
									  IN P_CANT_COMMIT INT,
									  OUT P_RESULTADO_MSJ VARCHAR(130),
									  OUT P_RESULTADO INT
 	*/ 

	CREATE PROCEDURE insertarCargosMigracion(IN P_COD_USUARIO CHARACTER,
											IN P_FECHA_SISTEMA TIMESTAMP,
											IN P_IP_USUARIO CHARACTER,
											IN P_ID_PROCESO_MIGRACION INT,									
											OUT P_RESULTADO_MSJ CHARACTER,
									  		OUT P_RESULTADO INT)									  		
  	LANGUAGE DATABASE  
  	EXTERNAL NAME "SPRESB.SP_CARGO_PAGO_MIGRAR";  
  	
  	
  	  	  	/*
	 * Obtiene los pagos agrupados de la tabla temporal SPR.PAGO_MIGRACION_TEMPORAL
 	*/ 

	CREATE PROCEDURE buscarPagosMigracion()
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.PAGO_AGRUPAR_MIGRACION";  
  	
  
	
  	

  	/*
	 * Obtiene el listado de pagos por comercio, desde los pagos temporales
 	*/  

	CREATE PROCEDURE buscarLoteComercioDetalle(	
					IN I_FEC_INICIO_GENERACION TIMESTAMP,
					IN I_ID_COMERCIO INTEGER
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_LOTE_COMERCIO_DETALLE_BUSCAR";  
  	
	CREATE PROCEDURE buscarLoteComercioDetalle2(	
					IN I_FEC_INICIO_GENERACION TIMESTAMP,
					IN I_ID_COMERCIO INTEGER
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_LOTE_COMERCIO_DETALLE_BUSCAR2";  
	 
	/*
	 * Obtiene Cargos de un listado de Lotes 
 	*/ 
 
	CREATE PROCEDURE buscarCargosProcesoAutorizador(
					IN I_IDS_LOTES CHARACTER,	
					IN I_FEC_PROCESO_PAGO TIMESTAMP
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_CARGO_BUSCAR_PROCESO_AUTORIZADOR";  
  	
	/*
	 * Actualizar cargos de un listado de Lotes 
 	*/ 
 
	CREATE PROCEDURE actualizarBuscarCargosProcesoAutorizador(
					IN I_IDS_LOTES CHARACTER,	
					IN I_FEC_PROCESO_PAGO TIMESTAMP
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_CARGO_BUSCAR_PROCESO_AUTORIZADOR_ENPROCESO";   	

	/*
	 * Obtiene los pagos de un Comercio para generar el archivo  
 	*/ 
 
	CREATE PROCEDURE buscarPagosComercio(
					IN I_FEC_PROCESO_PAGO TIMESTAMP,
					IN I_COD_COMERCIO CHARACTER
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_PAGO_COMERCIO_BUSCAR";  

	CREATE PROCEDURE buscarPagosComercio2(
					
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_PAGO_COMERCIO_BUSCAR2";  
	/*
	 * Actualiza Lotes proceso de generacion de cargos
 	*/ 
 
	CREATE PROCEDURE actualizarLotesProcesoAutorizador(
					IN I_ID_LOTE INTEGER,
					IN I_COD_USUARIO CHARACTER,
					IN I_ID_PROCESO_AUTORIZADOR_TRANSACCION INTEGER,
					IN I_FECHA_SISTEMA TIMESTAMP,
					IN I_IP_USUARIO CHARACTER
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_LOTE_ACTUALIZAR";  
 	
 	
 	/*
	 * Actualiza Lotes proceso de generacion de cargos -Arch Alignet
 	*/ 
	CREATE PROCEDURE actualizarLotesProcesoAutorizadorAlignet(
					IN P_COD_COMERCIO CHARACTER,
					IN P_COD_PRODUCTO CHARACTER,								
					IN P_FECHA_PROCESO TIMESTAMP,
					IN I_COD_USUARIO CHARACTER,
					IN I_ID_PROCESO_AUTORIZADOR_TRANSACCION INTEGER,
					IN I_FECHA_SISTEMA TIMESTAMP,
					IN I_IP_USUARIO CHARACTER
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_LOTE_ACTUALIZAR_ALIGNET";  
 	/*
	 * Actualiza Lotes proceso de generacion de cargos
 	*/ 
 
	CREATE PROCEDURE actualizarLotesProcesoAutorizadorError(
					IN I_ID_LOTE INTEGER
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_LOTE_ACTUALIZAR_ERROR_ARHCIVO_RPTA";
 	
 	/*
	 * Actualiza Lotes proceso de generacion de cargos
 	*/ 
 
	CREATE PROCEDURE actualizarLotesProcesoAutorizadorErrorAlignet(
					IN P_COD_COMERCIO CHARACTER,
					IN P_COD_PRODUCTO CHARACTER,
					IN P_NRO_IDENTIFICADOR_BENEFICIARIO CHARACTER,
					IN P_FECHA_PROCESO TIMESTAMP)
					
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_LOTE_ACTUALIZAR_ERROR_ARHCIVO_RPTA_ALIGNET";
 	 	
 		/*
	 * Actualiza Lotes proceso de generacion de cargos
 	*/ 
  
	CREATE PROCEDURE actualizarLotesArchivoError(
					IN I_ID_LOTE INTEGER
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_LOTE_ACTUALIZAR_ERROR";
 	
 			/*
	 * Actualiza Lotes proceso de generacion de cargos -Arch Alignet
 	*/ 
 
	CREATE PROCEDURE actualizarLotesArchivoErrorAlignet(
										IN P_COD_COMERCIO CHARACTER,
										IN P_COD_PRODUCTO CHARACTER,								
										IN P_FECHA_PROCESO TIMESTAMP)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SP_LOTE_ACTUALIZAR_ERROR_ALIGNET";
 	
 	/*
	 * Actualiza todos los cargos de una fecha proceso de pago solo cuando
	 * la cabecera del archivo contenga errores
 	*/ 
 
	CREATE PROCEDURE actualizarCargosProcesoAutorizadorError(
					IN FEC_PROCESO_PAGO TIMESTAMP
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_LOTE_CARGO_ACTUALIZAR_ERROR_ARHCIVO_RPTA";
 	
 	  


	/*
	 * Actualiza tarjetas - proceso actualizar de tarjetas
 	*/ 

	CREATE PROCEDURE actualizarTarjetas(
					IN I_ID_GRUPO CHARACTER,
					IN I_ID_PROCESO_ACTUALIZACION_TARJETA INTEGER,
					IN I_FEC_ACTUALIZACION_TARJETA TIMESTAMP,
					IN I_NRO_TARJETA_ENMASCARADO CHARACTER, 
					IN I_NRO_TARJETA_ENCRIPTADO CHARACTER,
					IN I_NRO_MES_EXPIRACION_TARJETA INTEGER,
					IN I_NRO_ANHO_EXPIRACION_TARJETA INTEGER,	
					IN I_NRO_TARJETA_ENMASCARADO_NUEVO CHARACTER, 	
					IN I_NRO_TARJETA_ENCRIPTADO_NUEVO CHARACTER,
					IN I_NRO_MES_EXPIRACION_TARJETA_NUEVO INTEGER,
					IN I_NRO_ANHO_EXPIRACION_TARJETA_NUEVO INTEGER,
					IN I_COD_RESPUESTA CHARACTER,
					IN I_COD_USUARIO_MODIFICACION CHARACTER,
  					IN I_IP_MODIFICACION CHARACTER,
  					OUT O_ID_AFILIACION_DESAFILIADO INTEGER					
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_TARJETA_ACTUALIZAR";  


  		
  	/*
	 * Actualiza Lotes proceso de generacion de cargos
 	*/ 
 
	CREATE PROCEDURE buscarCantidadTarjetasEmisor(
					IN I_FEC_PROCESO_PAGO TIMESTAMP
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1  	
 	EXTERNAL NAME "SPRESB.SP_TARJETA_EMISOR_BUSCAR";  	
 	
  	/*
	 * Obtener un parametro de la aplicacion web
 	*/  
 	 	
	CREATE PROCEDURE obtenerParametroSpr(
					IN P_ID_PARAMETRO INTEGER,
					OUT P_VAL_NUMERICO INTEGER,
					OUT P_VAL_CADENA CHARACTER					
					)
  	LANGUAGE DATABASE  	  
 	EXTERNAL NAME "SPRESB.PARAMETRO_OBTENER ";  	
  	
  	/*
	 * Obtiene el listado de tarjetas por emisor de un determinado dia
 	*/ 
 
	CREATE PROCEDURE buscarTarjetasEmisorDetalle(
					IN I_FEC_PROCESO_PAGO TIMESTAMP,
					IN I_ID_EMISOR INTEGER,
					OUT I_FLG_ENCRIPTAR_PGP CHARACTER
					)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1  	
 	EXTERNAL NAME "SPRESB.SP_TARJETA_EMISOR_DETALLE_BUSCAR";  		
  	
  	
  	
  	
	/*
	 * Inserta nuevos pagos en la tabla temporal de Pagos
 	*/ 
  
	CREATE PROCEDURE insertarPagosTemporalProcesoAutorizador(
					IN I_ID_GRUPO CHARACTER,
					IN I_ID_LOTE INTEGER,
					IN I_COD_COMERCIO CHARACTER, 
					IN I_NRO_TARJETA_ENCRIPTADO CHARACTER,
					IN I_NRO_TARJETA_ENMASCARADO CHARACTER,					
					IN I_MTO_PAGO DECIMAL,
					IN I_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
					IN I_FEC_PROCESO_PAGO TIMESTAMP,
					IN I_NRO_MES_VENCIMIENTO_TARJETA INTEGER,
					IN I_NRO_ANHO_VENCIMIENTO_TARJETA INTEGER,
					IN I_COD_RESULTADO CHARACTER,
					IN I_FEC_TRANSACCION TIMESTAMP, 
					IN I_NRO_TERMINAL CHARACTER,
					IN I_DESC_MENSAJE_TERMINAL CHARACTER,
					IN I_COD_RESPUESTA CHARACTER,
					IN I_NRO_RECIBO CHARACTER,
					IN I_ID_CARGO INTEGER,
					IN I_ID_PRODUCTO INTEGER,
					IN I_COD_TRANSACCION CHARACTER,
					IN I_COD_AUTORIZACION CHARACTER)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_PAGO_TEMPORAL_INSERTAR";  
  

	/*
	 * Ejecuta el volcado de los pagos temporales a la tabla pago
 	*/ 
   
	CREATE PROCEDURE insertarPagosProcesoAutorizador(
					IN I_ID_PROCESO_AUTORIZADOR_TRANSACCION INTEGER, 
					IN I_ID_GRUPO CHARACTER,
					IN I_COD_USUARIO CHARACTER,
					IN I_FECHA_SISTEMA TIMESTAMP,
					IN I_IP_USUARIO CHARACTER
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_PAGO_INSERTAR";  
 	

	/*
	 * Ejecuta el proceso de generar reintentos para los pagos
 	*/ 
 
	CREATE PROCEDURE generarReintentoPagos(
					IN I_COD_USUARIO CHARACTER,
					IN I_HORAS_PERIODO_OPERACION INTEGER,
					IN I_FECHA_SISTEMA TIMESTAMP,
					IN I_IP_USUARIO CHARACTER,
					OUT P_NUM_LOTES INTEGER 
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_PAGO_GENERAR_REINTENTO";  

	/*
	 * Ejecuta el proceso de generar reintentos para los cargos cuyo importe sea 0
 	*/ 
	CREATE PROCEDURE generarReintentoPagosImporteCero(
					IN I_COD_USUARIO CHARACTER,
					IN I_HORAS_PERIODO_OPERACION INTEGER,
					IN I_FECHA_SISTEMA TIMESTAMP,
					IN I_IP_USUARIO CHARACTER
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_PAGO_TEMPORAL_GENERAR_REINTENTO";
	/*
	 * Ejecuta el volcado de los pagos temporales a la tabla pago
 	*/ 
   
	CREATE PROCEDURE truncarTabla(
					IN I_NOM_ESQUEMA CHARACTER,
					IN I_NOM_TABLA CHARACTER
					)
  	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_GENERAL_TRUNCAR";




  	
	/*
	 * Obtiene Notificaciones (Afiliaciones)
 	*/ 
 	CREATE PROCEDURE buscarNotificaciones(IN IN_ID_NOTIFICACION INTEGER)
 	LANGUAGE DATABASE
 	DYNAMIC RESULT SETS 1
 	EXTERNAL NAME "SPRESB.SP_NOTIFICACIONES_BUSCAR";
 	
 	/*
 	 * Obtiene las afiliaciones sin renovación automática
 	*/
 	CREATE PROCEDURE bucarAfiliaciones(IN P_FEC_CADUCIDAD TIMESTAMP)
 	LANGUAGE DATABASE
 	DYNAMIC RESULT SETS 1
 	EXTERNAL NAME "SPRESB.SP_AFILIACION_BUSCAR";
 	
 	/*
 	 * Obtiene las solicitudes de afiliación con estado pendiente
 	*/
 	CREATE PROCEDURE buscarSolicitudAfiliaciones(IN P_FEC_EXPIRACION TIMESTAMP)
 	LANGUAGE DATABASE
 	DYNAMIC RESULT SETS 1
 	EXTERNAL NAME "SPRESB.SP_SOLICITUD_AFILIACION_BUSCAR";
 	
 	/*
 	 * Obtiene los correos de los tarjeta habiente para aquellos cargos que fueron autorizados
 	*/
 	CREATE PROCEDURE obtenerCargosAutorizados()
 	LANGUAGE DATABASE
 	DYNAMIC RESULT SETS 1
 	EXTERNAL NAME "SPRESB.SP_CARGO_OBTENER_AUTORIZADOS";
 	
 	/*
 	 * Obtiene los mensajes de alertas con estados pendientes
 	*/
 	CREATE PROCEDURE buscarMensajesAlertas(IN P_FEC_EXPIRACION TIMESTAMP)
 	LANGUAGE DATABASE
 	DYNAMIC RESULT SETS 1
 	EXTERNAL NAME "SPRESB.SP_ALERTA_BUSCAR";
 	
  	
  	/*
  	 * Actualizar el estado a Expirada de la Solicitud de Afiliación
  	*/
  	CREATE PROCEDURE actualizarSolicitudAfiliacion(IN P_ID_SOLICITUD_AFILIACION INTEGER,
  												   IN P_EST_SOLICITUD_AFILIACION INTEGER,
  												   IN P_FEC_MODIFICACION TIMESTAMP,
												   IN P_COD_USUARIO_MODIFICACION CHARACTER,
												   IN P_IP_MODIFICACION CHARACTER )
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_SOLICITUD_AFILIACION_ACTUALIZAR";
  	
  	/*
  	* Actualizar estado a Finalizado de las Alertas
  	*/
  	CREATE PROCEDURE actualizarEstadoMensajeAlerta(IN P_ID_ALERTA INTEGER,
  												   IN P_FEC_MODIFICACION TIMESTAMP,
												   IN P_COD_USUARIO_MODIFICACION CHARACTER,
												   IN P_IP_MODIFICACION CHARACTER )
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_ALERTA_ACTUALIZAR_ESTADO";
  	
  	/*
  	* Actualizar estado a Desafiliado de las Afiliaciones
  	*/
  	CREATE PROCEDURE actualizarEstadoAfiliaciones(IN P_ID_AFILIACION INTEGER,
  												   IN P_FEC_MODIFICACION TIMESTAMP,
												   IN P_COD_USUARIO_MODIFICACION CHARACTER,
												   IN P_IP_MODIFICACION CHARACTER )
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_AFILIACION_ACTUALIZAR_ESTADO";
  	
  	/*
  	* Buscar Afiliaciones con renovación automática
  	*/
  	CREATE PROCEDURE buscarAfiliacionesPorRenovar(IN P_FEC_CADUCIDAD DATE)
  	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
  	EXTERNAL NAME "SPRESB.SP_AFILIACION_RENOVACION_OBTENER";
  	
  	/*
  	* Renovación de Afiliacion
  	*/
  	CREATE PROCEDURE actualizarRenovarAfiliacion(IN P_ID_AFILIACION INTEGER,
  												IN P_CTD_MESES_VIGENCIA INT,
												IN P_FEC_ULTIMA_RENOVACION TIMESTAMP,	
												IN P_FEC_CADUCIDAD TIMESTAMP,
												IN P_FEC_MODIFICACION TIMESTAMP, 
												IN P_COD_USUARIO_MODIFICACION CHARACTER, 
												IN P_IP_MODIFICACION CHARACTER)
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRWEB.SP_AFILIACION_RENOVAR";
  	
  	/*
  	* Obtiene la fecha del último cargo de afiliacion
  	*/
  	CREATE PROCEDURE obtenerFechaUltimoCargo(IN P_ID_AFILIACION INTEGER,
  											 OUT P_FEC_ESTIMADA_PAGO DATE)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRWEB.SP_CARGO_OBTENER_ULTIMA_FECHA";
	
	/*
	* Se busca un id de lote en base al producto y fecha de pago. Si existe se actualizan los campos
	* Si no existe se crea uno y se devuelve el id
	*/
	CREATE PROCEDURE obtenerLoteIngresarActualizarSiExiste( IN P_ID_PRODUCTO INTEGER,
															IN P_FEC_ESTIMADA_PAGO TIMESTAMP,
															IN P_NRO_CARGOS INTEGER,
															IN P_MTO_TOTAL DECIMAL,
															IN P_EST_LOTE INT,
															IN P_FEC_CREACION TIMESTAMP,
															IN P_COD_USUARIO_CREACION CHARACTER,
															IN P_IP_CREACION CHARACTER,
															IN P_ID_COMERCIO INTEGER,
															OUT P_ID_LOTE INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRWEB.SP_LOTE_ACTUALIZAR_INSERTAR_BRK";
	
	
	/*
	* Se busca un id de lote en base al producto y fecha de pago. Si existe se actualizan los campos
	* Si no existe se crea uno y se devuelve el id
	*/
	CREATE PROCEDURE actualizarOperacion( IN P_COD_OPERACION CHARACTER,
															IN P_VALOR_CADENA CHARACTER,
															IN P_VALOR_ENTERO INTEGER,
															OUT P_OUT_VALOR_CADENA CHARACTER,
															OUT P_OUT_VALOR_ENTERO INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.OPERADOR_ACTUALIZAR";
	
	
		/*
	* Se busca un id de lote en base al producto y fecha de pago. Si existe se actualizan los campos
	* Si no existe se crea uno y se devuelve el id
	*/
	CREATE PROCEDURE obtenerLoteIngresarActualizarSiExiste2( IN P_ID_PRODUCTO INTEGER,
															IN P_FEC_ESTIMADA_PAGO TIMESTAMP,
															IN P_NRO_CARGOS INTEGER,
															IN P_MTO_TOTAL DECIMAL,
															IN P_EST_LOTE INT,
															IN P_FEC_CREACION TIMESTAMP,
															IN P_COD_USUARIO_CREACION CHARACTER,
															IN P_IP_CREACION CHARACTER,															
															OUT P_ID_LOTE INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRWEB.SP_LOTE_ACTUALIZAR_INSERTAR";
	
	
	/*
	* Inserta un cargo
	*/
	CREATE PROCEDURE insertarCargo(IN P_ID_AFILIACION INTEGER,
								  IN P_ID_LOTE INTEGER,
								  IN P_FEC_ESTIMADA_PAGO TIMESTAMP,
								  IN P_MTO_CARGO DECIMAL,
								  IN P_NRO_REINTENTOS INTEGER,
								  IN P_EST_CARGO INT,
								  IN P_FEC_CREACION TIMESTAMP,
								  IN P_COD_USUARIO_CREACION CHARACTER,
								  IN P_IP_CREACION CHARACTER,
								  OUT P_ID_CARGO INTEGER)
	LANGUAGE DATABASE 
	EXTERNAL NAME "SPRWEB.SP_CARGO_INSERTAR";
	
	/*
	* Obtener cantidad total de cargos a generar historial 
	*/
	CREATE PROCEDURE obtenerCantidadCargosHistorial(IN P_FEC_CREACION_HIST DATE,
								  	   OUT P_TAMANHO INTEGER)
	LANGUAGE DATABASE 
	EXTERNAL NAME "SPRESB.SP_CARGO_BUSCAR_HISTORIAL_TAMANHO";
	
	/*
	* Obtener paginado de cargos a generar historial 
	*/
	CREATE PROCEDURE generarPaseHistoricoCargos(IN P_FEC_CREACION DATE,
											    IN P_NUMERO_PAGINA INT,
											    IN P_CANTIDAD_ELEMENTOS INT)
	LANGUAGE DATABASE 
	EXTERNAL NAME "SPRESB.SP_CARGO_BUSCAR_HISTORIAL";
	
	/*
	* Obtener cantidad total de lotes a generar historial
	*/
	CREATE PROCEDURE obtenerCantidadLotesHistorial(IN P_FEC_CREACION_HIST DATE,
								  	   			   OUT P_TAMANHO INTEGER)
    LANGUAGE DATABASE
    EXTERNAL NAME "SPRESB.SP_LOTE_BUSCAR_HISTORIAL_TAMANHO";
    
	/*
	* Obtener paginado de lotes a generar historial 
	*/
	CREATE PROCEDURE generarPaseHistoricoLotes(IN P_FEC_CREACION DATE,
											    IN P_NUMERO_PAGINA INT,
											    IN P_CANTIDAD_ELEMENTOS INT)
	LANGUAGE DATABASE 
	EXTERNAL NAME "SPRESB.SP_LOTE_BUSCAR_HISTORIAL";
	
	/*
	* Importación de desafiliaciones
	*/
	CREATE PROCEDURE importacionDesafiliar(IN P_ID_COMERCIO INTEGER,
										  IN P_COD_PRODUCTO CHARACTER,
										  IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
										  IN P_COD_USUARIO_MODIFICACION CHARACTER,
										  IN P_IP_MODIFICACION CHARACTER,
										  OUT P_RESULTADO_MSJ CHARACTER,
										  OUT P_RESULTADO INT)
    LANGUAGE DATABASE
    EXTERNAL NAME "SPRESB.SP_AFILIACION_DESAFILIACION_IMPORTACION";
    
    /*
    * Importaciones de nuevas afiliaciones
    */
    CREATE PROCEDURE insertarNuevaAfiliacion(   IN P_ID_COMERCIO INT,
												IN P_COD_PRODUCTO CHARACTER,
												IN P_NRO_TARJETA_ENMASCARADO CHARACTER,
												IN P_NRO_TARJETA_ENCRIPTADO CHARACTER,
												IN P_NRO_MES_EXPIRACION_TARJETA INT,
												IN P_NRO_ANHO_EXPIRACION_TARJETA INT,
												IN P_TIPO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE INT,
												IN P_NRO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE CHARACTER,
												IN P_NOM_TARJETAHABIENTE CHARACTER,
												IN P_APE_PATERNO_TARJETAHABIENTE CHARACTER,
												IN P_APE_MATERNO_TARJETAHABIENTE CHARACTER,
												IN P_TELEFONO_TARJETAHABIENTE CHARACTER,
												IN P_EMAIL_TARJETAHABIENTE CHARACTER,
												IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
												IN P_NOM_BENEFICIARIO CHARACTER,
												IN P_APE_PATERNO_BENEFICIARIO CHARACTER,
												IN P_APE_MATERNO_BENEFICIARIO CHARACTER,
												IN P_TIPO_CARGO INTEGER,
												IN P_MTO_MAXIMO_CARGO DECIMAL,
												IN P_MTO_CARGO DECIMAL,
												IN P_FEC_PAGO TIMESTAMP,
												IN P_TIPO_PERIODICIDAD INT,
												IN P_COD_USUARIO_CREACION CHARACTER,
												IN P_IP_CREACION CHARACTER,
												IN P_ID_PROCESO_IMPORTACION INTEGER,
												IN P_FLG_REINTENTOS_AUTOMATICOS INTEGER,
												OUT P_ID_PRODUCTO INTEGER,
												OUT P_VIGENCIA_CADUCIDAD_AFILIACION INTEGER,	
												OUT P_ID_AFILIACION INTEGER,
												OUT P_FEC_CADUCIDAD TIMESTAMP,
												OUT P_RESULTADO_MSJ CHARACTER,
												OUT P_RESULTADO INT)
												LANGUAGE DATABASE
												EXTERNAL NAME "SPRESB.SP_AFILIACION_AFILIAR_IMPORTACION";
												
   
   /*
   * Insertar Nueva Solicitud de Afiliación
   */
   CREATE PROCEDURE insertarNuevaSolicutudAfiliacion( IN P_ID_GIRO INT,
   													  IN P_COD_COMERCIO CHARACTER,
													  IN P_COD_PRODUCTO CHARACTER,
													  IN P_NRO_TARJETA_ENMASCARADO CHARACTER,
													  IN P_NRO_TARJETA_ENCRIPTADO CHARACTER,
													  IN P_NRO_MES_EXPIRACION_TARJETA INT,
													  IN P_NRO_ANHO_EXPIRACION_TARJETA INT,
													  IN P_TIPO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE INT,
											  		  IN P_NRO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE CHARACTER,
													  IN P_NOM_TARJETAHABIENTE CHARACTER,
													  IN P_APE_PATERNO_TARJETAHABIENTE CHARACTER,
													  IN P_APE_MATERNO_TARJETAHABIENTE CHARACTER,
													  IN P_TELEFONO_TARJETAHABIENTE CHARACTER,
													  IN P_EMAIL_TARJETAHABIENTE CHARACTER,
													  IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
													  IN P_NOM_BENEFICIARIO  CHARACTER,
													  IN P_APE_PATERNO_BENEFICIARIO  CHARACTER,
													  IN P_APE_MATERNO_BENEFICIARIO  CHARACTER,
													  IN P_MTO_MAXIMO_CARGO DECIMAL,
													  IN P_COD_USUARIO_CREACION CHARACTER,
													  IN P_IP_CREACION CHARACTER,
													  IN P_FLG_ADQUIRIENTE_EMISOR_BIN INTEGER,
													  IN P_PARAM_FLG_SOLO_VISA CHARACTER,
													  IN P_PARAM_DIAS_EXPIRACION_SOL_AFI INT,
													  IN P_MODULO INT,
													  OUT P_RESULTADO_MSJ CHARACTER,
													  OUT P_RESULTADO INT)
   LANGUAGE DATABASE
   EXTERNAL NAME "SPRESB.SP_SOLICITUD_AFILIACION_INSERTAR_IMPORTACION";
   
   /*
   * Modifica una afiliación
   */
   CREATE PROCEDURE modificarAfiliacion (IN P_ID_COMERCIO INT,
										  IN P_COD_PRODUCTO CHARACTER,
										  IN P_NRO_TARJETA_ENMASCARADO CHARACTER,
										  IN P_NRO_TARJETA_ENCRIPTADO CHARACTER,
										  IN P_NRO_MES_EXPIRACION_TARJETA INT,
										  IN P_NRO_ANHO_EXPIRACION_TARJETA INT,
										  IN P_TELEFONO_TARJETAHABIENTE CHARACTER,
										  IN P_EMAIL_TARJETAHABIENTE CHARACTER,
										  IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
										  IN P_COD_USUARIO_MODIFICACION CHARACTER,
										  IN P_IP_MODIFICACION CHARACTER,
										  OUT P_RESULTADO_MSJ CHARACTER,
										  OUT P_RESULTADO INT)
   LANGUAGE DATABASE
   EXTERNAL NAME "SPRESB.SP_AFILIACION_ACTUALIZAR_IMPORTACION";


	/*
	* Validar el estado de un proceso  
	*/
   CREATE PROCEDURE validarEstadoProceso (IN P_ID_PROCESO INT,
										  IN P_ID_PROCESO_TRANSACCION INT,
										  OUT P_ID_ESTADO INT)
										  
   LANGUAGE DATABASE
   EXTERNAL NAME "SPRESB.SP_VALIDAR_ESTADO_PROCESO";
   
   /*
   * Actualización de Cargos de importación
   */
   CREATE PROCEDURE actualizarCargosImportacion (IN P_ID_COMERCIO INTEGER,
											   IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
											   IN P_COD_PRODUCTO CHARACTER,
											   IN P_FEC_ESTIMADA_PAGO DATE,
											   IN P_FEC_PROCESO_PAGO DATE,
											   IN P_NRO_RECIBO CHARACTER,
											   IN P_MTO_CARGO DECIMAL,
											   IN P_COD_USUARIO CHARACTER,
											   IN P_IP_USUARIO CHARACTER,
											   OUT P_RESULTADO_MSJ CHARACTER, 
											   OUT P_RESULTADO INT)		
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_CARGO_ACTUALIZAR_IMPORTACION";
	
	
	/* TODO BORRAR ESTE TEST
   * Actualización de Cargos de importación
   N P_FEC_PROCESO_PAGO DATE,   IN P_NRO_IDENTIFICACION_BENEFICIARIO VARCHAR(50),																
																   IN P_FEC_ESTIMADA_PAGO DATE,OUT P_RESULTADO INTEGER
   */
   CREATE PROCEDURE test1 ( IN P_FEC_PROCESO_PAGO DATE, 
   							IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
   							IN P_FEC_ESTIMADA_PAGO DATE,	OUT P_RESULTADO INT)		
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.TESTCARGOS";
	
	
	 /*
   * Actualización de Cargos 
   */
   
   CREATE PROCEDURE insertarCargosTablaTemporal(IN P_ID_GRUPO CHARACTER,
											        IN P_COD_COMERCIO CHARACTER,
											        IN P_COD_PRODUCTO CHARACTER,
											        IN P_NRO_TARJETA_ENMASCARADO CHARACTER,
											        IN P_NRO_TARJETA_ENCRIPTADO CHARACTER,
											        IN P_NOM_TARJETAHABIENTE CHARACTER,
													IN P_APE_PATERNO_TARJETAHABIENTE CHARACTER,
													IN P_APE_MATERNO_TARJETAHABIENTE CHARACTER,
											        IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
											        IN P_NOM_BENEFICIARIO CHARACTER,
											        IN P_APE_PATERNO_BENEFICIARIO CHARACTER,
													IN P_APE_MATERNO_BENEFICIARIO CHARACTER,
											        IN P_MTO_PAGO DECIMAL,
											        IN P_FEC_ESTIMADA_PAGO TIMESTAMP,
											        IN P_FEC_PROCESO_PAGO TIMESTAMP,
											        IN P_FEC_AFILIACION TIMESTAMP, 
											        IN P_FEC_SUSPENSION TIMESTAMP,
											        IN P_FEC_DESAFILIACION TIMESTAMP,
											        IN P_NRO_REINTENTO INTEGER,
											        IN P_MTO_MAXIMO_CARGO DECIMAL, 
											        IN P_EST_CARGO INTEGER,
											        IN P_COD_TRANSACCION CHARACTER,
											        IN P_COD_RESULTADO CHARACTER,
											        IN P_COD_RESPUESTA CHARACTER,
											        IN P_DESC_MENSAJE_TERMINAL CHARACTER,
											        IN P_NRO_REGISTRO INTEGER,
											        IN P_ID_AFILIACION_ALIGNET INTEGER,
											        IN P_NRO_RECIBO CHARACTER)											        											       
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PAGO_TEMPORAL_MIGRACION_INSERTAR";
	
		 /*
   * CARGOS TABLA TEMPORAL
   *CREATE OR REPLACE PROCEDURE SPRESB.SP_CARGO_INSERTAR_MIGRACION (
									  IN P_COD_USUARIO VARCHAR(40), 
									  IN P_FECHA_SISTEMA TIMESTAMP,
									  IN P_IP_USUARIO VARCHAR(50),
									  IN P_ID_PROCESO_MIGRACION INTEGER,
									  IN P_NRO_IDENTIFICACION_BENEFICIARIO ANCHOR DATA TYPE TO SPR.AFILIACION.NRO_IDENTIFICACION_BENEFICIARIO,
									  IN P_COD_PRODUCTO ANCHOR DATA TYPE TO SPR.PRODUCTO.COD_PRODUCTO,
									  IN P_COD_COMERCIO ANCHOR DATA TYPE TO SPR.COMERCIO.COD_COMERCIO,
									  IN P_FEC_PROCESO_PAGO TIMESTAMP,
									  IN P_FEC_ESTIMADA_PAGO TIMESTAMP,
									  IN P_FEC_SUSPENSION TIMESTAMP,
									  IN P_FEC_AFILIACION TIMESTAMP,
									  IN P_NRO_REINTENTO INT,									  
									  IN P_EST_CARGO INT,
									  IN P_MTO_PAGO DECFLOAT(16),
									  IN P_NRO_TARJETA_ENMASCARADO ANCHOR DATA TYPE TO SPR.AFILIACION.NRO_TARJETA_ENMASCARADO,
									  IN P_NRO_TARJETA_ENCRIPTADO ANCHOR DATA TYPE TO SPR.AFILIACION.NRO_TARJETA_ENCRIPTADO,
									  IN P_NRO_MES_VENCIMIENTO_TARJETA ANCHOR DATA TYPE TO SPR.AFILIACION.NRO_MES_EXPIRACION_TARJETA,
									  IN P_NRO_ANHO_VENCIMIENTO_TARJETA ANCHOR DATA TYPE TO SPR.AFILIACION.NRO_ANHO_EXPIRACION_TARJETA,
									  IN P_COD_TRANSACCION ANCHOR DATA TYPE TO SPR.PAGO_TEMPORAL_MIGRACION.COD_TRANSACCION,
									  IN P_COD_RESULTADO ANCHOR DATA TYPE TO SPR.PAGO_TEMPORAL_MIGRACION.COD_RESULTADO,
									  IN P_COD_RESPUESTA ANCHOR DATA TYPE TO SPR.PAGO_TEMPORAL_MIGRACION.COD_RESPUESTA,
									  IN P_DESC_MENSAJE_TERMINAL ANCHOR DATA TYPE TO SPR.PAGO_TEMPORAL_MIGRACION.DESC_MENSAJE_TERMINAL,
									  
									  OUT P_RESULTADO_MSJ VARCHAR(130),
									  OUT P_RESULTADO INT
									  )   
   */
   CREATE PROCEDURE insertarCargosTemporal( IN P_COD_USUARIO CHARACTER, 
									  IN P_FECHA_SISTEMA TIMESTAMP,
									  IN P_IP_USUARIO CHARACTER,
									  IN P_ID_PROCESO_MIGRACION INTEGER,
									  IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
									  IN P_COD_PRODUCTO CHARACTER,
									  IN P_COD_COMERCIO CHARACTER,
									  IN P_FEC_PROCESO_PAGO TIMESTAMP,
									  IN P_FEC_ESTIMADA_PAGO TIMESTAMP,
									  IN P_FEC_SUSPENSION TIMESTAMP,
									  IN P_FEC_AFILIACION TIMESTAMP,
									  IN P_NRO_REINTENTO INT,									  
									  IN P_EST_CARGO INT,
									  IN P_MTO_PAGO DECIMAL,
									  IN P_NRO_TARJETA_ENMASCARADO CHARACTER,
									  IN P_NRO_TARJETA_ENCRIPTADO CHARACTER,
									  IN P_NOM_TARJETAHABIENTE CHARACTER,
									  IN P_APE_PATERNO_TARJETAHABIENTE CHARACTER,
									  IN P_APE_MATERNO_TARJETAHABIENTE CHARACTER,
									  IN P_NOM_BENEFICIARIO CHARACTER,
									  IN P_APE_PATERNO_BENEFICIARIO CHARACTER,
									  IN P_APE_MATERNO_BENEFICIARIO CHARACTER,
									  IN P_MTO_MAXIMO_CARGO DECIMAL,
									  IN P_COD_TRANSACCION CHARACTER,
									  IN P_COD_RESULTADO CHARACTER,
									  IN P_COD_RESPUESTA CHARACTER,
									  IN P_DESC_MENSAJE_TERMINAL CHARACTER,									  
									  OUT P_RESULTADO_MSJ CHARACTER,
									  OUT P_RESULTADO INT)		
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_CARGO_INSERTAR_MIGRACION";
	
	
	
	/*
	* Proceso para migrar los pagos
	*	 
								
	*/
	 CREATE PROCEDURE migrarPagos( IN P_COD_USUARIO CHARACTER, 
									  IN P_FECHA_SISTEMA TIMESTAMP,
									  IN P_IP_USUARIO CHARACTER,
									  IN P_ID_PROCESO_MIGRACION INTEGER,
									  IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
									  IN P_COD_PRODUCTO CHARACTER,
									  IN P_COD_COMERCIO CHARACTER,
									  IN P_FEC_PROCESO_PAGO TIMESTAMP,
									  IN P_FEC_ESTIMADA_PAGO TIMESTAMP,
									  IN P_FEC_SUSPENSION TIMESTAMP,
									  IN P_FEC_AFILIACION TIMESTAMP,
									  IN P_NRO_REINTENTO INT,									  
									  IN P_EST_CARGO INT,
									  IN P_MTO_PAGO DECIMAL,
									  IN P_NRO_TARJETA_ENMASCARADO CHARACTER,
									  IN P_NRO_TARJETA_ENCRIPTADO CHARACTER,
									  IN P_NOM_TARJETAHABIENTE CHARACTER,
									  IN P_APE_PATERNO_TARJETAHABIENTE CHARACTER,
									  IN P_APE_MATERNO_TARJETAHABIENTE CHARACTER,
									  IN P_NOM_BENEFICIARIO CHARACTER,
									  IN P_APE_PATERNO_BENEFICIARIO CHARACTER,
									  IN P_APE_MATERNO_BENEFICIARIO CHARACTER,
									  IN P_MTO_MAXIMO_CARGO DECIMAL,
									  IN P_COD_TRANSACCION CHARACTER,
									  IN P_COD_RESULTADO CHARACTER,
									  IN P_COD_RESPUESTA CHARACTER,
									  IN P_DESC_MENSAJE_TERMINAL CHARACTER,									  
									  OUT P_RESULTADO_MSJ CHARACTER,
									  OUT P_RESULTADO INT)		
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PAGO_INSERTAR_MIGRACION";
	
	
	/*
	* Proceso para actualizar la fecha final del proceso de migracion
	*	 							
	*/
	 CREATE PROCEDURE actualizarProcesoMigracionFechaFin(
	 								  IN P_ID_PROCESO_MIGRACION INT, IN P_FECHA_FIN TIMESTAMP)		
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_MIGRACION_ACTUALIZAR_FIN";
	
	/*
	* Proceso para actualizar las afiliaciones migracion
	*	 							
	*/
	 CREATE PROCEDURE actualizarAfiliacionMigracion(
	 								  IN P_COD_USUARIO CHARACTER, 
									  IN P_FECHA_SISTEMA TIMESTAMP,
									  IN P_IP_USUARIO CHARACTER,
									  IN P_ID_PROCESO_MIGRACION INTEGER)		
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_AFILIACION_ACTUALIZAR_FEC_CADUCIDAD_MIGRACION";
	
		/*
	* Proceso para actualizar las afiliaciones migracion
	*	 							
	*/
	 CREATE PROCEDURE obtenerLogMigracion()		
	LANGUAGE DATABASE
	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.MIGRACION_GENERAR_ARCHIVO_LOG";
	
	
		/*
	* Proceso para actualizar las afiliaciones migracion
	*	 							
	*/
	 CREATE PROCEDURE obtenerLogAfiliacionMigracion()		
	LANGUAGE DATABASE
	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.AFILIACION_MIGRACION_LOG_OBTENER";
	
	
		/*
	* Proceso que genera los errores adicionales que se puedan encontrar en la tabla temporal de migracion
	*	 							
	*/
	 CREATE PROCEDURE insertarLogTemporalAfiliacion(IN P_COMERCIO CHARACTER)		
	LANGUAGE DATABASE	
	EXTERNAL NAME "SPRESB.AFILIACION_MIGRACION_GENERAR_LOG";
	
	
	/*
	* Insertar registro de archivo log/csv de importación
	*/
	CREATE PROCEDURE insertarArchivo(IN P_NOMBRE_ARCHIVO CHARACTER,
									 IN P_TIPO_ARCHIVO INT,
									 IN P_FEC_CREACION TIMESTAMP,
									 OUT P_ID_ARCHIVO INT)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_ARCHIVO_INSERTAR";																   													  
	
	/*
	* Insertar registro de archivo log/csv de importación
	*/
	CREATE PROCEDURE obtenerProductosComercio(IN P_COD_COMERCIO CHARACTER)
	LANGUAGE DATABASE
	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.COMERCIO_OBTENER_PRODUCTO";
	
	
	
	
	/*
	* Obtiene el total de registros para migrar cargos
	*/
	CREATE PROCEDURE obtenerCantidadCargos(OUT P_CANTIDAD INT)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.CARGOS_MIGRACION_BUSCAR_TAMANHO";	
	
	
	/*
	* Obtiene el listado de emisores 
	*/
	CREATE PROCEDURE obtenerListadoEmisores()
	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.SP_EMISOR_LISTADO_OBTENER";	
	
	CREATE PROCEDURE insertarBinImportacion(IN P_NOM_MARCA_TARJETA CHARACTER,
										  IN P_COD_EMISOR CHARACTER,
										  IN P_NRO_BIN CHARACTER,
										  IN P_NOM_TARJETA CHARACTER,
										  IN P_TIPO_TARJETA INT,
										  IN P_FEC_CREACION TIMESTAMP,
										  IN P_COD_USUARIO_CREACION CHARACTER,
										  IN P_IP_CREACION CHARACTER,
										  OUT P_RESULTADO_MSJ CHARACTER,
										  OUT P_RESULT INT)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_BINE_INSERTAR_IMPORTACION";
	
	
	/*
	* Procedimiento para migrar una afiliacion a la tabla spr.afiliacion
	*/	
	/*CREATE PROCEDURE migrarAfiliacion(IN P_COD_COMERCIO CHARACTER,
								              IN P_COD_PRODUCTO CHARACTER,
								              IN P_NRO_TARJETA_ENMASCARADO CHARACTER,
								              IN P_NRO_TARJETA_ENCRIPTADO CHARACTER,
								              IN P_NRO_MES_EXPIRACION_TARJETA INT,
								              IN P_NRO_ANHO_EXPIRACION_TARJETA INT,
								              IN P_TIPO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE INT,
								              IN P_NRO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE CHARACTER,
								              IN P_NOM_TARJETAHABIENTE CHARACTER,
								              IN P_APE_PATERNO_TARJETAHABIENTE CHARACTER,
								              IN P_APE_MATERNO_TARJETAHABIENTE CHARACTER,
								              IN P_TELEFONO_TARJETAHABIENTE CHARACTER,
								              IN P_EMAIL_TARJETAHABIENTE CHARACTER,
								              IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
								              IN P_NOM_BENEFICIARIO  CHARACTER,
								              IN P_APE_PATERNO_BENEFICIARIO  CHARACTER,
								              IN P_APE_MATERNO_BENEFICIARIO  CHARACTER,
								              IN P_TIPO_CARGO INT,
								              IN P_MTO_MAXIMO_CARGO DECIMAL,
								              IN P_MTO_CARGO DECIMAL,
								              IN P_FEC_PAGO TIMESTAMP,
								              IN P_TIPO_PERIODICIDAD INT,
								              IN P_COD_USUARIO_CREACION CHARACTER,
								              IN P_IP_CREACION CHARACTER,
								              IN P_ID_PROCESO_MIGRACION INTEGER,
								              IN P_FEC_AFILIACION TIMESTAMP,
								              IN P_ESTADO INT,
								              IN P_FEC_DESAFILIACION TIMESTAMP,
								              OUT P_ID_AFILIACION INTEGER,
								              OUT P_RESULTADO_MSJ CHARACTER,
								              OUT P_RESULTADO INT) 
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_AFILIACION_AFILIAR_MIGRACION";
	*/
	
	/*
	* Procedimiento para migrar una afiliacion a la tabla spr.afiliacion
	*/	
	CREATE PROCEDURE migrarAfiliacionTemporal(IN P_ID_PRODUCTO INTEGER,								              
								              IN P_NRO_TARJETA_ENMASCARADO CHARACTER,
								              IN P_NRO_TARJETA_ENCRIPTADO CHARACTER,
								              IN P_NRO_MES_EXPIRACION_TARJETA INT,
								              IN P_NRO_ANHO_EXPIRACION_TARJETA INT,
								              IN P_TIPO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE INT,
								              IN P_NRO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE CHARACTER,
								              IN P_NOM_TARJETAHABIENTE CHARACTER,
								              IN P_APE_PATERNO_TARJETAHABIENTE CHARACTER,
								              IN P_APE_MATERNO_TARJETAHABIENTE CHARACTER,
								              IN P_TELEFONO_TARJETAHABIENTE CHARACTER,
								              IN P_EMAIL_TARJETAHABIENTE CHARACTER,
								              IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
								              IN P_NOM_BENEFICIARIO  CHARACTER,
								              IN P_APE_PATERNO_BENEFICIARIO  CHARACTER,
								              IN P_APE_MATERNO_BENEFICIARIO  CHARACTER,								            
								              IN P_MTO_MAXIMO_CARGO DECIMAL,
								              IN P_TIPO_MONEDA INTEGER,
								              IN P_ESTADO INT,
								              IN P_FEC_AFILIACION TIMESTAMP,
								              IN P_COD_USUARIO_CREACION CHARACTER,
								              IN P_IP_CREACION CHARACTER,
								              IN P_TIPO_CARGO INT,
								              IN P_MTO_CARGO DECIMAL,
								              IN P_FEC_PAGO TIMESTAMP,
								              IN P_TIPO_PERIODICIDAD INT,								              
								              IN P_ID_PROCESO_MIGRACION INTEGER,								             								             
								              IN P_FEC_DESAFILIACION TIMESTAMP,
								              IN P_NRO_REGISTRO INTEGER,
								              IN P_ID_AFILIACION_ALIGNET INTEGER,
								              IN P_CANAL_AFILIACION INTEGER, --Cambio canal de afiliacion
								              IN P_FEC_SOLICITUD TIMESTAMP) --Cambio canal de afiliacion
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.AFILIACION_MIGRACION_TEMPORAL_INSERTAR";
	
	
		/*
	 * Procedimiento para escribir el log de errores de migracion de afiliacion.
 	*/ 	 
 	
	CREATE PROCEDURE registrarErrLog(						
					IN P_NRO_REGISTRO INTEGER,
					IN P_MENSAJE CHARACTER
					)
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_AFILIACION_LOG_MIGRACION_INSERTAR";  
	
		/*
	 * Procedimiento para actualizar las instancias del proceso de actualizacion de tarjetas
 	*/ 	 
 	
	CREATE PROCEDURE actualizarProcesoMantenimientoBD(						
					IN I_FEC_FIN_PROCESO TIMESTAMP,
					IN I_ID_PROCESO_MANTENIMIENTO INTEGER
					)
  	LANGUAGE DATABASE
  	EXTERNAL NAME "SPRESB.SP_PROCESO_MANTENIMIENTO_ACTUALIZACION";  
  	
  	
  	/*
 	* Ejecuta el volvado de los cargos que no fueron enviados a telefonica por importe 0
 	*/
 	CREATE PROCEDURE insertarPagoTemporalCargosNoProcesados(
					IN I_FEC_PROCESO_PAGO TIMESTAMP,
					IN I_ID_GRUPO  CHARACTER )
 	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_PAGO_TEMPORAL_INSERTAR_CARGOS_TO_COMERCIO";
 	
 	/*
 	* Actualiza lotes con monto cero
 	 	*/
 	CREATE PROCEDURE actualizarLotesMontoCero()
 	LANGUAGE DATABASE
 	EXTERNAL NAME "SPRESB.SP_PAGO_TEMPORAL_ACT_LOTE_MTO_CERO";

 	/*
	* Procedimiento para registrar el inicio de un proceso de notificacion
	*/
	CREATE PROCEDURE insertarProcesoEnvioNotificacion(
				   IN I_ID_PROCESO INTEGER,
				   IN I_FEC_INICIO_PROCESO TIMESTAMP, 
				   OUT I_ID_PROCESO_NOTIFICACION INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_ENVIO_NOTIFICACION_INSERTAR";
	
	
 	/*
	* Procedimiento para actualizar el final de un proceso de notificacion
	*/
	CREATE PROCEDURE actualizarProcesoEnvioNotificacion(
			   		IN I_ID_PROCESO_NOTIFICACION INTEGER,
			   		IN I_FEC_FIN_PROCESO TIMESTAMP)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_ENVIO_NOTIFICACION_ACTUALIZAR";
		
		
 	/*
	* Procedimiento para registrar el detalle de envio de notificacion
	*/
	CREATE PROCEDURE insertarDetalleProcesoEnvioNotificacion(
				   	IN I_ID_NOTIFICACION INTEGER, 
					IN I_ID_PROCESO_NOTIFICACION INTEGER,
					IN I_CTD_NOTIFICACIONES_ENVIADAS INTEGER,
					OUT I_ID_ENVIO_NOTIFICACION INTEGER)
	LANGUAGE DATABASE
	EXTERNAL NAME "SPRESB.SP_PROCESO_ENVIO_NOTIFICACION_DETALLE_INSERTAR";				
	
	
	CREATE PROCEDURE obtenerParametro(IN ID_PARAMETRO INTEGER)
	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.SPR_PARAMETRO_OBTENER";
	
	CREATE PROCEDURE obtenerAfiliacionesPorExpirarNotificacion(IN P_FEC_CADUCIDAD DATE)
	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.SP_NOTIFICACION_AFILIACION_OBTENER";
	
	CREATE PROCEDURE obtenerComerciosPorExpirarAfiliaciones(IN P_FEC_CADUCIDAD DATE)
	LANGUAGE DATABASE
  	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.SP_NOTIFICACION_COMERCIO_OBTENER";
	
	CREATE PROCEDURE obtenerCargosPorCobrarNotificacion(IN P_FEC_CADUCIDAD DATE)
	LANGUAGE DATABASE
	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.SP_NOTIFICACION_CARGO";
	
	
	CREATE PROCEDURE obtenerAfiliacionParaNotificarDesafiliacion(IN I_ID_AFILIACION INTEGER)
	LANGUAGE DATABASE
	DYNAMIC RESULT SETS 1
	EXTERNAL NAME "SPRESB.SP_AFILIACION_OBTENER_PARA_NOTIFICACION";
	
	
	CREATE PROCEDURE insertarNuevaAfiliacionDsSol( IN P_NRO_AFILIACION INT,                                                                    
												    IN P_TIPO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE INTEGER,
												    IN P_NRO_DOCUMENTO_IDENTIDAD_TARJETAHABIENTE CHARACTER,                                                                              
												    IN P_TELEFONO_TARJETAHABIENTE CHARACTER,
												    IN P_EMAIL_TARJETAHABIENTE CHARACTER,
												    IN P_NRO_IDENTIFICACION_BENEFICIARIO CHARACTER,
												    IN P_NOM_BENEFICIARIO CHARACTER,
												    IN P_APE_PATERNO_BENEFICIARIO CHARACTER,
												    IN P_APE_MATERNO_BENEFICIARIO CHARACTER,
												    IN P_TIPO_CARGO INT,
												    IN P_MTO_CARGO DECIMAL,
												    IN P_FEC_PAGO TIMESTAMP,
												    IN P_TIPO_PERIODICIDAD INT,
												    IN P_COD_USUARIO_CREACION CHARACTER,
												    IN P_IP_CREACION CHARACTER,
												    IN P_ID_PROCESO_IMPORTACION INT,
												    IN P_FLG_REINTENTOS_AUTOMATICOS INT,
												    IN P_MSG_DENEGADO  CHARACTER,
												    IN P_ESTADO INT,    
												    OUT P_ID_PRODUCTO INT,
												    OUT P_VIGENCIA_CADUCIDAD_AFILIACION  INT,
												    OUT P_ID_AFILIACION INT,
												    OUT P_FEC_CADUCIDAD TIMESTAMP,
												    OUT P_RESULTADO_MSJ CHARACTER,
												    OUT P_RESULTADO INT)
   LANGUAGE DATABASE
   EXTERNAL NAME "SPRESB.SP_AFILIACION_AFILIAR_DS_SOL_IMPORTACION";