/*
*   
* Nombre 	: LIB_MB_PROPIEDADES.esql
* Proposito : Funciones para acceder a las constantes de los procesos Batch
* Fecha		: 2014-06-17
* Autores 	: Ruben Mejia - Synopsis
* Version 	: 1.0
*
*--------------------------------------------------------------------
*/ 

BROKER SCHEMA ib.visa.esb.bth
  
CREATE FUNCTION getFORMATO_FECHAHORA1_BD() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_FECHAHORA1_BD;
END;

CREATE FUNCTION getFORMATO_FECHAHORA2_BD() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_FECHAHORA2_BD;
END;

CREATE FUNCTION getFORMATO_FECHAHORA3_BD() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_FECHAHORA3_BD;
END;

CREATE FUNCTION getHORA_VACIA() RETURNS CHARACTER
BEGIN
	RETURN C_HORA_VACIA;
END;
 
CREATE FUNCTION getFORMATO_FECHA() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_FECHA;
END;

CREATE FUNCTION getFORMATO_FECHA2() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_FECHA2;
END;

CREATE FUNCTION getFORMATO_FECHA3() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_FECHA3;
END;

CREATE FUNCTION getFORMATO_FECHA4() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_FECHA4;
END;

CREATE FUNCTION getFORMATO_FECHA_BD() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_FECHA_BD;
END;

CREATE FUNCTION getFORMATO_HORA_BD2() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_HORA_BD2;
END;

CREATE FUNCTION getFORMATO_HORA_3() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_HORA_3;
END;

CREATE FUNCTION getFORMATO_HORA_BD3() RETURNS CHARACTER
BEGIN
	RETURN C_FORMATO_HORA_BD3;
END;

CREATE FUNCTION getID_PROCESO_0() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_0;
END;

CREATE FUNCTION getID_PROCESO_1() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_1;
END;

CREATE FUNCTION getID_PROCESO_2() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_2;
END;

CREATE FUNCTION getID_PROCESO_3() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_3;
END;

CREATE FUNCTION getID_PROCESO_4() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_4;
END;

CREATE FUNCTION getID_PROCESO_5() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_5;
END;

CREATE FUNCTION getID_PROCESO_6() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_6;
END;

CREATE FUNCTION getID_PROCESO_7() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_7;
END;

CREATE FUNCTION getID_PROCESO_8() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_8;
END;

CREATE FUNCTION getID_PROCESO_9() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_9;
END;

CREATE FUNCTION getID_PROCESO_10() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_10;
END;

CREATE FUNCTION getID_PROCESO_11() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_11;
END;

CREATE FUNCTION getID_PROCESO_12() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_12;
END;

CREATE FUNCTION getID_PROCESO_13() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_13;
END;

CREATE FUNCTION getID_PROCESO_17() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_17;
END;

CREATE FUNCTION getID_PROCESO_18() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_18;
END;

CREATE FUNCTION getID_PROCESO_19() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_19;
END;

CREATE FUNCTION getID_PROCESO_20() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_20;
END;

CREATE FUNCTION getID_PROCESO_21() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_21;
END;

CREATE FUNCTION getID_PROCESO_22() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_22;
END;

CREATE FUNCTION getID_PROCESO_23() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_23;
END;

CREATE FUNCTION getID_PROCESO_24() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_24;
END;

CREATE FUNCTION getID_PROCESO_25() RETURNS INTEGER
BEGIN
	RETURN C_ID_PROCESO_25;
END;




CREATE FUNCTION getTIP_LOG_INFO() RETURNS INTEGER
BEGIN
	RETURN C_TIP_LOG_INFO;
END;

CREATE FUNCTION getTIP_LOG_ERROR() RETURNS INTEGER
BEGIN
	RETURN C_TIP_LOG_ERROR;
END;

CREATE FUNCTION getTIP_LOG_DEBUG() RETURNS INTEGER
BEGIN
	RETURN C_TIP_LOG_DEBUG;
END;

CREATE FUNCTION getTIP_PROC_MANT_RENOAUT() RETURNS INTEGER
BEGIN
	RETURN C_TIP_PROC_MANT_RENOAUT;
END;

CREATE FUNCTION getTIP_PROC_MANT_ACTEST() RETURNS INTEGER
BEGIN
	RETURN C_TIP_PROC_MANT_ACTEST;
END;
  
CREATE FUNCTION getEST_0_PROCESO() RETURNS INTEGER
BEGIN
	RETURN C_EST_0_PROCESO;
END;

CREATE FUNCTION getEST_1_PROCESO() RETURNS INTEGER
BEGIN
	RETURN C_EST_1_PROCESO;
END;

CREATE FUNCTION getEST_2_PROCESO() RETURNS INTEGER
BEGIN
	RETURN C_EST_2_PROCESO;
END;

CREATE FUNCTION getEST_3_PROCESO() RETURNS INTEGER
BEGIN
	RETURN C_EST_3_PROCESO;
END;

CREATE FUNCTION getEST_4_PROCESO() RETURNS INTEGER
BEGIN
	RETURN C_EST_4_PROCESO;
END; 
  
CREATE FUNCTION getEST_5_PROCESO() RETURNS INTEGER
BEGIN
	RETURN C_EST_5_PROCESO;
END;

CREATE FUNCTION getTIPO_SERVICIO_BATCH() RETURNS CHARACTER
BEGIN
	RETURN C_TIPO_SERVICIO_BATCH;
END;

CREATE FUNCTION getTIPO_SERVICIO_GENERAL() RETURNS CHARACTER
BEGIN
	RETURN C_TIPO_SERVICIO_GENERAL;
END;
 
CREATE FUNCTION getIDENTIFICADOR_PROCESO(IN idProceso INTEGER) RETURNS CHARACTER
BEGIN 
	DECLARE chrIdentProceso CHARACTER '';
	
	IF (idProceso = C_ID_PROCESO_0) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_0;
	ELSEIF (idProceso = C_ID_PROCESO_1) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_1; 
	ELSEIF (idProceso = C_ID_PROCESO_2) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_2;
	ELSEIF (idProceso = C_ID_PROCESO_3) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_3;
	ELSEIF (idProceso = C_ID_PROCESO_4) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_4;
	ELSEIF (idProceso = C_ID_PROCESO_5) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_5;
	ELSEIF(idProceso = C_ID_PROCESO_6) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_6;
	ELSEIF(idProceso = C_ID_PROCESO_7) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_7;		
	ELSEIF(idProceso = C_ID_PROCESO_8) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_8;
	ELSEIF(idProceso = C_ID_PROCESO_9) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_9;
	ELSEIF(idProceso = C_ID_PROCESO_10) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_10;
	ELSEIF(idProceso = C_ID_PROCESO_11) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_11;
	ELSEIF(idProceso = C_ID_PROCESO_12) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_12;
	ELSEIF(idProceso = C_ID_PROCESO_13) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_13;
	ELSEIF(idProceso = C_ID_PROCESO_14) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_14;
	ELSEIF(idProceso = C_ID_PROCESO_15) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_15;
	ELSEIF(idProceso = C_ID_PROCESO_16) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_16;
	ELSEIF(idProceso = C_ID_PROCESO_17) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_17;
	ELSEIF(idProceso = C_ID_PROCESO_18) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_18;
	ELSEIF(idProceso = C_ID_PROCESO_19) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_19;
	ELSEIF(idProceso = C_ID_PROCESO_20) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_20;
	ELSEIF(idProceso = C_ID_PROCESO_21) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_21;
	ELSEIF(idProceso = C_ID_PROCESO_22) THEN
		SET chrIdentProceso = C_IDENTI_PROCESO_22;
	ELSEIF(idProceso = C_ID_PROCESO_23) THEN
	SET chrIdentProceso = C_IDENTI_PROCESO_23;		
	ELSEIF(idProceso = C_ID_PROCESO_24) THEN
	SET chrIdentProceso = C_IDENTI_PROCESO_24;
	ELSEIF(idProceso = C_ID_PROCESO_25) THEN
	SET chrIdentProceso = C_IDENTI_PROCESO_25;
	ELSEIF(idProceso = C_ID_PROCESO_26) THEN
	SET chrIdentProceso = C_IDENTI_PROCESO_26;	
	ELSEIF(idProceso = C_ID_PROCESO_27) THEN
	SET chrIdentProceso = C_IDENTI_PROCESO_27;					
	END IF;
	
	RETURN chrIdentProceso;
END;


CREATE FUNCTION getCOD_ERROR_2001() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2001;
END;

CREATE FUNCTION getCOD_ERROR_2002() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2002;
END;

CREATE FUNCTION getCOD_ERROR_2003() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2003;
END;

CREATE FUNCTION getCOD_ERROR_2004() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2004;
END;

CREATE FUNCTION getCOD_ERROR_2005() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2005;
END;

CREATE FUNCTION getCOD_ERROR_2006() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2006;
END;

CREATE FUNCTION getCOD_ERROR_2007() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2007;
END;

CREATE FUNCTION getCOD_ERROR_2008() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2008;
END;

CREATE FUNCTION getCOD_ERROR_2009() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2006;
END;

CREATE FUNCTION getCOD_ERROR_2010() RETURNS INTEGER
BEGIN
	RETURN C_COD_ERROR_2006;
END;

CREATE FUNCTION getMSJ_ERROR_2001() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2001;
END;

CREATE FUNCTION getMSJ_ERROR_2002() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2002;
END;

CREATE FUNCTION getMSJ_ERROR_2003() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2003;
END;

CREATE FUNCTION getMSJ_ERROR_2004() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2004;
END;

CREATE FUNCTION getMSJ_ERROR_2005() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2005;
END;

CREATE FUNCTION getMSJ_ERROR_2006() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2006;
END;

CREATE FUNCTION getMSJ_ERROR_2007() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2007;
END;

CREATE FUNCTION getMSJ_ERROR_2008() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2008;
END;

CREATE FUNCTION getMSJ_ERROR_2009() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2009; 
END;

CREATE FUNCTION getMSJ_ERROR_2010() RETURNS CHARACTER
BEGIN
	RETURN C_MSJ_ERROR_2010; 
END;

CREATE FUNCTION getSI() RETURNS CHARACTER
BEGIN
	RETURN C_SI;
END;

CREATE FUNCTION getNO() RETURNS CHARACTER
BEGIN
	RETURN C_NO;
END;

CREATE FUNCTION getEST_ACTIVO() RETURNS CHARACTER
BEGIN
	RETURN C_EST_ACTIVO;
END;

CREATE FUNCTION getEST_INACTIVO() RETURNS CHARACTER
BEGIN
	RETURN C_EST_INACTIVO;
END;

CREATE FUNCTION getCOD_EXITO_CORE_ESB() RETURNS CHARACTER
BEGIN
	RETURN C_COD_EXITO_CORE_ESB;
END;

CREATE FUNCTION getTIP_ERROR_CORE_ESB() RETURNS CHARACTER
BEGIN
	RETURN C_TIP_ERROR_CORE_ESB;
END;

CREATE FUNCTION getTIP_EXITO_CORE_ESB() RETURNS CHARACTER
BEGIN
	RETURN C_TIP_EXITO_CORE_ESB;
END; 
 
CREATE FUNCTION getSUFIJO_ARCHIVO_TEMPORAL() RETURNS CHARACTER
BEGIN
	RETURN C_SUFIJO_ARCHIVO_TEMPORAL;
END; 

CREATE FUNCTION getSUFIJO_ARCHIVO_ERRORES() RETURNS CHARACTER
BEGIN
	RETURN C_SUFIJO_ARCHIVO_ERRORES;
END; 

CREATE FUNCTION getESQUEMA_BD_ESB() RETURNS CHARACTER
BEGIN
	RETURN C_ESQUEMA_BD_ESB;
END; 

CREATE FUNCTION getID_ESB_VISA() RETURNS CHARACTER
BEGIN
	RETURN C_ID_ESB_VISA;
END; 

CREATE FUNCTION getTIPO_ALERTA_1() RETURNS CHARACTER
BEGIN
	RETURN C_TIPO_ALERTA_1;
END; 

CREATE FUNCTION getTIPO_ALERTA_2() RETURNS CHARACTER
BEGIN
	RETURN C_TIPO_ALERTA_2;
END; 

CREATE FUNCTION getTIPO_ALERTA_3() RETURNS CHARACTER
BEGIN
	RETURN C_TIPO_ALERTA_3;
END; 

CREATE FUNCTION getTIPO_ALERTA_4() RETURNS CHARACTER
BEGIN
	RETURN C_TIPO_ALERTA_4;
END; 

CREATE FUNCTION getTIPO_ALERTA_5() RETURNS CHARACTER
BEGIN
	RETURN C_TIPO_ALERTA_5;
END; 

CREATE FUNCTION getEST_IMP_EN_PROCESO() RETURNS INTEGER
BEGIN
	RETURN C_EST_IMP_EN_PROCESO;
END;	

CREATE FUNCTION getTIPO_FILE_ARCHIVO_COMERCIO() RETURNS INTEGER
BEGIN
	RETURN C_TIPO_FILE_ARCHIVO_COMERCIO;
END;	

CREATE FUNCTION getENCODING() RETURNS INTEGER
BEGIN
	RETURN C_CCSID;
END;

CREATE FUNCTION getEXT_FILE_ALIGNET() RETURNS CHARACTER
BEGIN
	RETURN C_EXTENSION_FILE_DEST_PGP; 
END;

CREATE FUNCTION getEST_TRUE() RETURNS INTEGER
BEGIN
	RETURN C_FLG_TRUE;
END;

CREATE FUNCTION getEST_FALSE() RETURNS INTEGER
BEGIN
	RETURN C_FLG_FALSE;
END;

CREATE FUNCTION getPREV_DAYS_AFILIACION_EXPIRAR() RETURNS INTEGER
BEGIN
	RETURN C_DIAS_PREV_EXPIRACION_AFILIACION;
END;

CREATE FUNCTION getPARAMETRO_DIAS_PREV_CARGO_COBRO() RETURNS INTEGER
BEGIN
	RETURN C_DIAS_PREV_CARGO_A_COBRAR;
END;

CREATE FUNCTION getID_NOTIFICACION_AFILIACION_EXPIRAR() RETURNS INTEGER
BEGIN
	RETURN C_ID_NOTIFICACION_AFILIACIONES;
END;

CREATE FUNCTION getID_NOTIFICACION_CARGO_X_COBRAR() RETURNS INTEGER
BEGIN
	RETURN C_ID_NOTIFICACION_CARGOS_X_COBRAR;
END;

CREATE FUNCTION getID_PARAMETRO_FLG_SOLO_VISA() RETURNS INTEGER
BEGIN
	RETURN C_ID_PARAMETRO_FLG_SOLO_VISA;
END;

CREATE FUNCTION getID_PARAMETRO_DIAS_EXP_SOL_AFI() RETURNS INTEGER
BEGIN
	RETURN C_ID_PARAMETRO_DIAS_EXP_SOL_AFI;
END;

CREATE FUNCTION getID_PARAMETRO_PERIODO_OPERACION() RETURNS INTEGER
BEGIN
	RETURN C_ID_PARAMETRO_PERIODO_OPERACION;
END;

/*Synopsis: RMQ Nuevo para CE*/
CREATE FUNCTION getESTADO_IMPORTACION(IN intEstadoImportacion INTEGER) RETURNS CHARACTER
BEGIN 
 
	DECLARE chrEstadoImportacion CHARACTER '';
	
	IF (intEstadoImportacion = 0) THEN
		SET chrEstadoImportacion = 'PENDIENTE';
	ELSEIF (intEstadoImportacion = 1) THEN
		SET chrEstadoImportacion = 'EN PROCESO'; 
	ELSEIF (intEstadoImportacion = 2) THEN
		SET chrEstadoImportacion = 'PROCESADO';
	ELSEIF (intEstadoImportacion = 3) THEN
		SET chrEstadoImportacion = 'FALLIDO';
	END IF;
	
	RETURN chrEstadoImportacion;
END;