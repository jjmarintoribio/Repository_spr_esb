BROKER SCHEMA ib.visa.esb.bth.gen
PATH ib.visa.esb.bth;
 
DECLARE cacheSeguridad SHARED ROW;

CREATE COMPUTE MODULE MF_ESB_BTH_CARPARAMSEG_ObtenerParametrosSeguridad
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN    

		IF (cacheSeguridad.iniciado IS NULL) THEN
			   
	 		--((1)) Se obtienen los parametros de BD
			CALL obtenerParametrosBD(getTIPO_SERVICIO_GENERAL(),Environment.Params[]);
	 
	 		SET Environment.host 	= THE (SELECT ITEM P.VALOR FROM Environment.Params[] as P WHERE P.CODIGO_ATRIBUTO = 'HOSTSEGURIDAD');
	 		SET Environment.port 	= THE (SELECT ITEM P.VALOR FROM Environment.Params[] as P WHERE P.CODIGO_ATRIBUTO = 'PORTSEGURIDAD');
	 		SET Environment.lmkId 	= THE (SELECT ITEM P.VALOR FROM Environment.Params[] as P WHERE P.CODIGO_ATRIBUTO = 'LMKID');
	
			--((2)) Se obtienen las llaves encriptadas de BD
			CALL obtenerParametrosSeguridadBD(Environment.Llaves[]);
	
	 		SET Environment.llaveMaestra	= THE (SELECT ITEM L.VAL_LLAVE FROM Environment.Llaves[] as L WHERE L.TIPO_LLAVE = 0);	
	  
			--((3)) Se incia el proxy en java 		      
	 		    		         
	 		CALL iniciarProxy(Environment.host,Environment.port, Environment.lmkId );
	 		
	 		--((4)) Se manda a llenar el keystore en java
	 		  	
			DECLARE refLlave REFERENCE TO Environment.Llaves;
			
			WHILE LASTMOVE(refLlave) DO											
	
				IF (refLlave.TIPO_LLAVE <> 0) THEN --No se desencripta la llave maestra
					CALL  desencriptarLlave(Environment.llaveMaestra,refLlave.VAL_LLAVE,refLlave.COD_ENTIDAD_EXTERNA, TRIM(CAST(refLlave.TIPO_LLAVE AS CHARACTER)));
				END IF;
				MOVE refLlave NEXTSIBLING REPEAT TYPE NAME;
	
			END WHILE;
			
			--((4)) Se inicia el encriptador 
			
			CALL  iniciarEncriptador();
			
			SET cacheSeguridad.iniciado = TRUE;
		
		END IF;
		
		RETURN FALSE;
		
	END;

	
END MODULE;
